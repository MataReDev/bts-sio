import{_ as e,c as a,o as t,U as s}from"./chunks/framework.aGaNZw_P.js";const f=JSON.parse('{"title":"Les concepts","description":"","frontmatter":{"aside":false},"headers":[],"relativePath":"pages/categories/les-concepts.md","filePath":"pages/categories/les-concepts.md","lastUpdated":1704112852000}'),o={name:"pages/categories/les-concepts.md"},r=s('<h1 id="les-concepts" tabindex="-1">Les concepts <a class="header-anchor" href="#les-concepts" aria-label="Permalink to &quot;Les concepts&quot;">​</a></h1><h2 id="la-programmation-orientee-objet" tabindex="-1">La Programmation orientée objet <a class="header-anchor" href="#la-programmation-orientee-objet" aria-label="Permalink to &quot;La Programmation orientée objet&quot;">​</a></h2><p>La programmation orientée objet est un paradigme de programmation qui permet de structurer un programme en utilisant des objets.</p><ul><li>Les classes sont des modèles qui décrivent les objets.</li><li>Les objets sont des entités qui possèdent des attributs et des méthodes.</li><li>Les attributs sont des variables qui décrivent l&#39;objet.</li><li>Les méthodes sont des fonctions qui permettent de manipuler l&#39;objet.</li></ul><p>Dans cette pages vous trouverez les ressources pour vous aider à comprendre la programmation orientée objet.</p><ul><li><a href="/cheatsheets/poo/">La programmation orientée objet</a></li><li><a href="/cheatsheets/poo-uml/">La représentation UML</a></li><li><a href="/cours/poo.html">Cours sur la programmation orientée objet</a></li><li><a href="/cours/uml.html">Lire un diagramme UML</a></li><li><a href="/cours/les_interfaces.html">Les interfaces</a></li><li><a href="/cours/poo_redefinition_polymorphisme.html">Redéfinition &amp; Polymorphisme</a></li><li><a href="/pages/urdle.html">S&#39;entrainer</a></li></ul><h2 id="le-versionning" tabindex="-1">Le versionning <a class="header-anchor" href="#le-versionning" aria-label="Permalink to &quot;Le versionning&quot;">​</a></h2><p>Le versionning est un système qui permet de gérer les différentes versions d&#39;un projet. Il permet de garder une trace des modifications apportées au projet et de pouvoir revenir à une version précédente si besoin.</p><ul><li><a href="/cheatsheets/git/">Aide mémoire git</a></li><li><a href="/cours/git.html">Cours sur le versionning</a></li><li><a href="/cours/gitlab.html">Gitlab</a></li></ul><h2 id="la-securite" tabindex="-1">La sécurité <a class="header-anchor" href="#la-securite" aria-label="Permalink to &quot;La sécurité&quot;">​</a></h2><p>La sécurité est un ensemble de règles et de bonnes pratiques qui permettent de protéger un système informatique.</p><ul><li><a href="/cours/securite_applications.html">Le cours</a></li><li><a href="/cheatsheets/owasp/">La méthode OWASP</a></li></ul><h2 id="l-organisation" tabindex="-1">L&#39;organisation <a class="header-anchor" href="#l-organisation" aria-label="Permalink to &quot;L&#39;organisation&quot;">​</a></h2><p>Structurer son code et ses projets permet de faciliter la maintenance et la compréhension du code.</p><ul><li><a href="/cours/organisations.html">Cours sur l&#39;organisation</a></li><li><a href="/cours/veille.html">La veille</a></li></ul><h2 id="les-composants" tabindex="-1">Les composants <a class="header-anchor" href="#les-composants" aria-label="Permalink to &quot;Les composants&quot;">​</a></h2><p>Les composants sont des éléments réutilisables qui permettent de créer des applications plus rapidement.</p><ul><li><a href="/cours/composants.html">Cours sur les composants</a></li><li><a href="/tp/composants/vuejs.html">Les composants VueJS</a></li><li><a href="/tp/composants/android.html">Les composants Android</a></li></ul>',18),i=[r];function n(l,c,p,u,m,d){return t(),a("div",null,i)}const g=e(o,[["render",n]]);export{f as __pageData,g as default};
