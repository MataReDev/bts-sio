import{_ as e}from"./chunks/namespace_resolver.-7TJPEmA.js";import{_ as n,c as t,k as s,I as l,w as p,U as i,D as r,o as h}from"./chunks/framework.aGaNZw_P.js";const o="/assets/concert_db.DXv2gN7P.png",D=JSON.parse(`{"title":"API & Client Web Simple","description":"Nous avons vu pr√©c√©demment qu'il √©tait simple de cr√©er des sites Web avec Laravel. Dans le monde du d√©veloppement, il est tr√®s courant de ne pas √©changer entre le client et le serveur directement en HTML, mais directement en JSON.","frontmatter":{"description":"Nous avons vu pr√©c√©demment qu'il √©tait simple de cr√©er des sites Web avec Laravel. Dans le monde du d√©veloppement, il est tr√®s courant de ne pas √©changer entre le client et le serveur directement en HTML, mais directement en JSON."},"headers":[],"relativePath":"tp/laravel/laravel_api.md","filePath":"tp/laravel/laravel_api.md","lastUpdated":1675461632000}`),k={name:"tp/laravel/laravel_api.md"},d=i('<h1 id="api-client-web-simple" tabindex="-1">API &amp; Client Web Simple <a class="header-anchor" href="#api-client-web-simple" aria-label="Permalink to &quot;API &amp; Client Web Simple&quot;">‚Äã</a></h1><div class="tip custom-block"><p class="custom-block-title">Vous pouvez consulter une nouvelle version</p><p>üö® Une nouvelle version de ce TP est disponible <a href="./api_produit.html">ici</a>.</p></div><p>Nous avons vu pr√©c√©demment qu&#39;il √©tait simple de cr√©er des sites Web avec Laravel. Dans le monde du d√©veloppement, il est tr√®s courant de ne pas √©changer entre le client et le serveur directement en HTML, mais directement en JSON.</p><p>Nous appelons cette fa√ßon des API (dans notre cas des API REST), c&#39;est le fondement m√™me de beaucoup de sites Internet que vous utilisez tous les jours (Gmail, Facebook, ‚Ä¶).</p><p>Laravel √©tant un framework ¬´ √† tout faire ¬ª celui-ci nous permet bien √©videmment de cr√©er √©galement des API. C&#39;est ce que nous allons faire dans ce TP.</p><div class="tip custom-block"><p class="custom-block-title">API ?</p><p>Ce que vous venez de cr√©er est une API. Une API est le coeur de beaucoup de syst√®mes moderne. Il est important de comprendre ce concept d√®s √† pr√©sent. Pourquoi faire une API ?</p><p>Une API va nous permettre de s√©parer la logique entre client et serveur afin de r√©aliser si vous le souhaitez diff√©rent client pour la m√™me donn√©e (exemple Twitter avec des clients multiplateformes).</p><p>Pourquoi pr√©f√©rer une API ¬´ JSON / XML ¬ª √† un retour HTML basic ? Tout simplement, car l&#39;API va √™tre universelle; nous pourrons donc l&#39;utiliser dans un site Internet, mais √©galement dans une application ou n&#39;importe quel client applicatif (web, Android, iOs, une voiture, une TV‚Ä¶).</p></div><details class="details custom-block"><summary>Sommaire</summary><nav class="table-of-contents"><ul><li><a href="#creer-votre-projet">Cr√©er votre projet</a></li><li><a href="#creation-de-la-base-de-donnees">Cr√©ation de la base de donn√©es</a></li><li><a href="#creation-de-l-api">Cr√©ation de l&#39;API</a><ul><li><a href="#creation-du-controleur">Cr√©ation du contr√¥leur</a></li><li><a href="#liste">Liste</a></li><li><a href="#la-creation">La Cr√©ation</a></li><li><a href="#creation-version-alternative">Cr√©ation, version alternative</a></li><li><a href="#suppression">Suppression</a></li><li><a href="#definir-les-routes">D√©finir les routes</a></li><li><a href="#tester-votre-api">Tester votre API</a></li></ul></li><li><a href="#et-les-clients-dans-tout-ca">Et les clients dans tout √ßa ?</a><ul><li><a href="#installer-tabulator">Installer Tabulator</a></li><li><a href="#utiliser-tabulator">Utiliser Tabulator</a></li><li><a href="#ajouter-les-filtres-dans-tabulator">Ajouter les filtres dans Tabulator</a></li><li><a href="#ajouter-un-element-via-l-ajax">Ajouter un √©l√©ment via l&#39;Ajax</a></li><li><a href="#suppression-via-l-ajax">Suppression via l&#39;Ajax</a></li></ul></li><li><a href="#creation-de-l-api-utilisateur">Cr√©ation de l&#39;API utilisateur</a></li></ul></nav></details><h2 id="creer-votre-projet" tabindex="-1">Cr√©er votre projet <a class="header-anchor" href="#creer-votre-projet" aria-label="Permalink to &quot;Cr√©er votre projet&quot;">‚Äã</a></h2><p>Pour cette √©tape, je vous laisse suivre le d√©but du <a href="./introduction.html">pr√©c√©dent TP</a>.</p><p><strong>Attention</strong> a bien installer au moins la version &gt;8 de Laravel.</p><h2 id="creation-de-la-base-de-donnees" tabindex="-1">Cr√©ation de la base de donn√©es <a class="header-anchor" href="#creation-de-la-base-de-donnees" aria-label="Permalink to &quot;Cr√©ation de la base de donn√©es&quot;">‚Äã</a></h2><p>La premi√®re √©tape comme toujours est d&#39;ajouter dans votre projet ¬´ une nouvelle migration ¬ª afin de cr√©er la base de donn√©es relative √† notre probl√©matique.</p><p>Dans notre cas, voil√† la table que nous souhaitons cr√©er :</p><p><img src="'+o+`" alt="Table Concert" loading="lazy"></p><p>Je vous laisse r√©aliser les √©tapes suivantes :</p><ul><li>Cr√©ation de la migration et le mod√®le <code>php artisan make:model Concert --migration</code></li><li>D√©finir les champs dans la migration, mais √©galement dans le <code>$fillable</code>.</li><li>Lancer la migration <code>php artisan migrate</code></li></ul><div class="tip custom-block"><p class="custom-block-title">Un doute sur comment faire ?</p><p>√áa fait plusieurs fois que nous faisons ce genre d&#39;op√©ration. Si vous avez un doute, vous pouvez regarder le d√©tail <a href="./introduction.html#la-base-de-donnees">dans le TP</a></p></div><div class="danger custom-block"><p class="custom-block-title">STOP !</p><p>Nous avons donc maintenant une base de donn√©es de test. Avant d&#39;aller plus loin‚Ä¶ Je vous laisse ins√©rer des donn√©es fictives pour que nous ayons un peu de contenu.</p><p>Vous avez deux fa√ßons de faire √ßa :</p><ul><li>Directement en base ¬´ manuellement ¬ª.</li><li><a href="https://laravel.com/docs/8.x/seeding" target="_blank" rel="noreferrer">Via Une Factories + Un Seeder de Laravel</a></li></ul><p>L&#39;avantage du seeder ? Il va permettre de cr√©er beaucoup de donn√©es en un rien de temps ! 50 Concerts ? Aucun probl√®me il suffit de faire :</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Concert</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Pour l&#39;impl√©mentation nous allons le faire ensemble, mais √ßa se r√©sume √† :</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> make:factory</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ConcertFactory</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Je vous laisse configurer la factory (<code>/database/factories/ConcertFactory.php</code>) en prenant exemple sur celle de la partie User. Mais dans les grandes ligne il faut ajouter</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> definition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;name&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> $this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">faker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;date&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> $this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">faker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>√âditer maintenant le DatabaseSeeder pour ajouter dans le run() :</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Concert</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> db:seed</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Vous avez maintenant 50 concerts dans votre table</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Pratique !</p></div><h2 id="creation-de-l-api" tabindex="-1">Cr√©ation de l&#39;API <a class="header-anchor" href="#creation-de-l-api" aria-label="Permalink to &quot;Cr√©ation de l&#39;API&quot;">‚Äã</a></h2><p>La cr√©ation d&#39;une API va √™tre tr√®s proche de ce que nous connaissons d√©j√†. Premi√®re √©tape cr√©er un contr√¥leur ; pour rappel celui-ci permet de g√©rer le traffic et de r√©pondre aux demandes des / du clients.</p><p>Notre API sera tr√®s simple, elle contiendra <strong>3 routes / fonctionnalit√©s</strong> :</p><table><thead><tr><th>M√©thode</th><th>Chemin</th><th>Fonctionnalit√©</th></tr></thead><tbody><tr><td>GET</td><td><code>/api/concert</code></td><td>Liste de l&#39;ensemble des concerts</td></tr><tr><td>POST</td><td><code>/api/concert</code></td><td>Ajout d&#39;un nouveau concert (en fournissant les donn√©es en POST)</td></tr><tr><td>DELETE</td><td><code>/api/concert/{id}</code></td><td>Suppression du concert sp√©cifi√© en param√®tre <code>id</code></td></tr></tbody></table><p>L&#39;ensemble des routes va retourner du JSON. Comme vu ensemble en cours, le format JSON est tr√®s facilement lisible, quel que soit le langage client. C&#39;est donc un tr√®s bon choix !</p><div class="warning custom-block"><p class="custom-block-title">Avant de coder il faut d√©finir</p><p>Le petit tableau que je vous propose ici est tr√®s important. Il permet de savoir ce que je veux faire. Nous sommes ici dans un TP‚Ä¶ Mais vous codez comme si vous √©tiez dans un projet ¬´ classique ¬ª.</p><p>Il est donc important de d√©finir ce que l&#39;on souhaite faire‚Ä¶ Pour soit, mais √©galement pour vos coll√®gues qu&#39;ils sachent ce que vous √™tes entrain de faire.</p></div><h3 id="creation-du-controleur" tabindex="-1">Cr√©ation du contr√¥leur <a class="header-anchor" href="#creation-du-controleur" aria-label="Permalink to &quot;Cr√©ation du contr√¥leur&quot;">‚Äã</a></h3><p>Le contr√¥leur vous savez faire, nous allons faire un nouveau contr√¥leur, celui-ci sera d√©di√© √† la partie API :</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> make:controller</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ApiControler</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Je ne vous d√©taille pas plus cette √©tape nous l&#39;avons vu plusieurs fois pr√©c√©demment.</p><p>Bien ! Notre code est maintenant pr√™t. Nous allons cr√©er les m√©thodes permettant la manipulation de notre base de donn√©es tout en r√©pondant √† nos API bien √©videmment (liste, cr√©ation, terminer, suppression).</p><p>Nous allons maintenant √©crire une m√©thode pour chaque action. Avec les diff√©rentes conditions n√©cessaires au bon fonctionnement de votre application.</p><h3 id="liste" tabindex="-1">Liste <a class="header-anchor" href="#liste" aria-label="Permalink to &quot;Liste&quot;">‚Äã</a></h3><p>La m√©thode <code>liste</code> est certainement la plus simple, nous allons simplement faire appel √† la m√©thode <code>all()</code> de Eloquent (ORM pour l‚Äôacc√®s √† la base de donn√©es). Pour √ßa cr√©ez une nouvelle m√©thode dans la Class <code>ApiController</code> avec le code suivant :</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> listApi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Concert</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Rien de bien compliqu√©, comme vous pouvez le voir le <code>response()-&gt;json(‚Ä¶)</code> permet de cr√©er une r√©ponse au format JSON pour votre API (que l‚Äôon utilisera plus tard au moment de la mise en place des routes).</p>`,34),u={class:"tip custom-block"},c=s("p",{class:"custom-block-title"},"Et oui !",-1),E=s("p",null,"C'est aussi simple que √ßa ! Avec cette simple m√©thode, vous avez √©crit votre premi√®re API.",-1),g=s("iframe",{src:"https://giphy.com/embed/UtQHZEv5M7POO8t2WW",width:"280",height:"160",frameBorder:"0",class:"giphy-embed",allowFullScreen:""},null,-1),m=i('<div class="danger custom-block"><p class="custom-block-title">Un instant ‚úã</p><p>En PHP objet il y a la notion de namespace, Laravel utilise de base les namespace, √ßa veut dire que nous allons avoir √† utiliser le mot cl√© <code>use</code> pour importer (include). Quand vous voulez utiliser une classe qui n&#39;est pas dans le m√™me fichier, il faudra d√©clarer l&#39;emplacement via un <code>use</code>. Exemple, pour que <code>Concert</code> soit accessible depuis le contr√¥leur il faudra :</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> App\\Models\\Concert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>‚ö†Ô∏è Si vous utilisez <strong>PHPStorm</strong> cet import sera automatique.</li><li>‚ö†Ô∏è Si vous utilisez <strong>VSCode</strong> il faudra passer par une extension <a href="https://marketplace.visualstudio.com/items?itemName=MehediDracula.php-namespace-resolver" target="_blank" rel="noreferrer">Disponible ici</a></li></ul><p>Pour <strong>PHPStorm</strong>, alt+entr√©e permettra de d√©clencher l&#39;ajout du use.</p><p>Pour <strong>VSCode</strong> je vous laisse regarder l&#39;usage de l&#39;extension :</p><p><img src="'+e+`" alt="Namespace Resolver" loading="lazy"></p></div><h3 id="la-creation" tabindex="-1">La Cr√©ation <a class="header-anchor" href="#la-creation" aria-label="Permalink to &quot;La Cr√©ation&quot;">‚Äã</a></h3><p>Pour l&#39;ajout, c&#39;est un peu diff√©rent, nous allons cr√©er dans la base de donn√©es un nouvel enregistrement √† chaque requ√™te de type <code>POST</code>. Nous allons donc devoir √©crire un peu de code.</p><p>Pour la partie cr√©ation, nous allons faire un mapping automatique entre la requ√™te HTTP et le mod√®le <code>Concert</code></p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createApi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $request){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $item </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Concert</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($request</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($item);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">üò¨</p><p>Que va-t-il se passer lors de l‚Äôappel ? L‚Äôobjet <code>$request</code> contiens tous les param√®tres de l‚Äôappel HTTP, la m√©thode <code>all()</code> permets de les r√©cup√©rer. L‚Äôobjet <code>Concerts</code> poss√®de une m√©thode permettant de cr√©er un nouvel enregistrement en base de donn√©es. Les valeurs pass√©es en param√®tre de <code>createApi()</code> permettre de renseigner automatiquement les champs en base de donn√©es.</p></div><h3 id="creation-version-alternative" tabindex="-1">Cr√©ation, version alternative <a class="header-anchor" href="#creation-version-alternative" aria-label="Permalink to &quot;Cr√©ation, version alternative&quot;">‚Äã</a></h3><p>La premi√®re approche est la plus rapide, mais elle sous-entend que tous les param√®tres soient bien initialis√©s dans ¬´ l‚Äôinput ¬ª HTTP. Dans cette version la m√©thode est plus compl√®te et g√®re la cr√©ation de l‚Äôobjet Concert manuellement en r√©cup√©rant les diff√©rents √©l√©ments dans la requ√™te HTTP</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createApi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $request){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $request</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $request</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;date&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($name){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      $concert </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Concert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      $concert</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $name;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      $concert</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $date;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      $concert</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">save</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;status&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;success&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;status&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="suppression" tabindex="-1">Suppression <a class="header-anchor" href="#suppression" aria-label="Permalink to &quot;Suppression&quot;">‚Äã</a></h3><p>Pour la partie suppression, nous allons devoir dans un premier temps r√©cup√©rer le Concert par son ID.</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> deleteApi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($id){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $concert </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Concert</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($id);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($concert){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        $concert</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">delete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;status&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;success&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;status&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="definir-les-routes" tabindex="-1">D√©finir les routes <a class="header-anchor" href="#definir-les-routes" aria-label="Permalink to &quot;D√©finir les routes&quot;">‚Äã</a></h3><p>Votre code est maintenant pr√™t, il faut le ¬´ brancher ¬ª dans votre <code>Router</code> pour que celui-ci soit accessible aux utilisateurs. Cette fois-ci nous n&#39;allons pas ajouter nos routes dans le fichier <code>web.php</code> car ce ne sont pas des liens ¬´ web ¬ª‚Ä¶ Mais dans attention‚Ä¶</p><p>‚Ä¶Roulement de tambour‚Ä¶ ‚Ä¶ ‚Ä¶Attention‚Ä¶ ‚Ä¶</p><p><code>api.php</code> Je vous donne le code √† ajouter, mais celui-ci est classique, c&#39;est juste des liens tels que nous le faisons dans la partie <code>web.php</code> :</p><details class="details custom-block"><summary>Je pense que vous savez faire‚Ä¶ Mais si vous avez oubli√© ‚Ä¶</summary><p>Je sais que vous avez cliqu√© sans vraiment chercher‚Ä¶</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Route</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/concert&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;App\\Http\\Controllers\\ApiControler&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;listApi&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Route</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">post</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/concert&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;App\\Http\\Controllers\\ApiControler&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;createApi&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Route</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">delete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/concert/{id}&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;App\\Http\\Controllers\\ApiControler&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;deleteApi&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></details><p>ü§ì Les routes que vous ajoutez dans le fichier <code>api.php</code> sont automatiquement pr√©fix√©es par <code>/api/</code>.</p><div class="danger custom-block"><p class="custom-block-title">Et le type de la m√©thode ?</p><p>N&#39;oubliez pas le type de la m√©thode ! Surtout pas ! Dans le tableau nous avons d√©fini des types de m√©thode (GET, POST, DELETE), c&#39;est important de respecter nos sp√©cifications !</p></div><h3 id="tester-votre-api" tabindex="-1">Tester votre API <a class="header-anchor" href="#tester-votre-api" aria-label="Permalink to &quot;Tester votre API&quot;">‚Äã</a></h3><p>Maintenant que l‚Äôensemble de votre code est termin√© (et comment√© üïµüèª), nous allons pouvoir le tester, pour tester les API c‚Äôest plut√¥t simple. Il suffit d‚Äôutiliser des outils tels que <a href="https://www.getpostman.com/" target="_blank" rel="noreferrer">Postman</a>, l‚Äôid√©e c‚Äôest de se construire un ¬´ cahier ¬ª de test vous permettant de valider le fonctionnement de votre application rapidement (comprendre d√®s que vous modifiez le code). C‚Äôest dans ce but que je vous ai pr√©par√© une collection de ¬´ tests ¬ª qui devrait vous permettre de valider rapidement le bon fonctionnement de vos API.</p><p>Valider que vos API fonctionnent correctement gr√¢ce √† l&#39;outil <a href="https://www.getpostman.com/" target="_blank" rel="noreferrer">Postman</a>.</p><p>(Pssst! La cr√©ation de comptes <strong>n&#39;est pas obligatoire</strong>) &lt;-- ‚ö†Ô∏è‚ö†Ô∏è</p><p>ü§ì Commencez par la plus simple, par exemple <code>/api/</code> qui doit normalement liste actuelle de concert. ü§ì</p><p>‚úã Tester l&#39;ensemble de vos API avant de continuer.</p><h2 id="et-les-clients-dans-tout-ca" tabindex="-1">Et les clients dans tout √ßa ? <a class="header-anchor" href="#et-les-clients-dans-tout-ca" aria-label="Permalink to &quot;Et les clients dans tout √ßa ?&quot;">‚Äã</a></h2><p>Nous avons √©crit des API‚Ä¶ Mais pour l&#39;instant nous n&#39;avons pas de client (interface qui les utilise), c&#39;est dommage ! Je suis sympa, je vais vous donner une astuce ! Sur Internet nous trouvons tout (oui oui). Vos clients peuvent √™tre :</p><ul><li>Une page Web.</li><li>Une application Android.</li><li>etc‚Ä¶</li></ul><p>Nous allons tester que √ßa fonctionne correctement gr√¢ce √† une page Web, et √ßa va √™tre tr√®s simple‚Ä¶ tr√®s tr√®s simple. Nous allons faire de l&#39;Ajax (ne partez pas, √ßa va bien se passer). Pour simplifier, nous allons utiliser une excellente <a href="http://tabulator.info/" target="_blank" rel="noreferrer">librairie nomm√©e Tabulator</a></p><h3 id="installer-tabulator" tabindex="-1">Installer Tabulator <a class="header-anchor" href="#installer-tabulator" aria-label="Permalink to &quot;Installer Tabulator&quot;">‚Äã</a></h3><p>Tabulator est une librairie JavaScript qui va nous masquer toute la partie appel de l&#39;API, mais √©galement toute la partie cr√©ation du tableau affichant les r√©sultats (avec plein d&#39;options super cools). La premi√®re √©tape est donc d&#39;ajouter la librairie dans votre projet.</p><p>Pour √ßa il suffit de suivre le : <a href="http://tabulator.info/docs/4.9/install#sources-cdn" target="_blank" rel="noreferrer">Guide d&#39;installation</a></p><p>En suivant le guide d&#39;installation, nous voyons qu&#39;il faut ajouter dans notre projet (dans le <code>head</code>) les liens suivants :</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">link</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://unpkg.com/tabulator-tables/dist/css/tabulator.min.css&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  rel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;stylesheet&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text/javascript&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://unpkg.com/tabulator-tables/dist/js/tabulator.min.js&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="utiliser-tabulator" tabindex="-1">Utiliser Tabulator <a class="header-anchor" href="#utiliser-tabulator" aria-label="Permalink to &quot;Utiliser Tabulator&quot;">‚Äã</a></h3><p>Nous allons charger de la donn√©e via un appel Ajax, avec Tabulator c&#39;est tr√®s simple, c&#39;est m√™me int√©gr√© <a href="http://tabulator.info/docs/4.9/data#ajax" target="_blank" rel="noreferrer">il suffit de suivre la documentation</a></p><p>Si nous suivons la documentation, nous voyons qu&#39;il suffit d&#39;ajouter dans votre page fraichement cr√©√©e le code suivant :</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> myTable </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Tabulator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    height: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;311px&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    layout: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;fitColumns&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ajaxURL: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/api/concert&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    placeholder: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Aucune donn√©es&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    columns: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      { title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Nom&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, field: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sorter: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;string&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, width: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      { title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Date du concert&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, field: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sorter: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // myTable.setData(&quot;/api/concert&quot;);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><div class="danger custom-block"><p class="custom-block-title">La documentation, La documentation</p><p>Je n&#39;invente rien ! Tout ce que je vous donne ici ne sont que des utilisations telles que d√©fini dans la <a href="http://tabulator.info/docs/4.9/columns" target="_blank" rel="noreferrer">documentation</a>.</p></div><h3 id="ajouter-les-filtres-dans-tabulator" tabindex="-1">Ajouter les filtres dans Tabulator <a class="header-anchor" href="#ajouter-les-filtres-dans-tabulator" aria-label="Permalink to &quot;Ajouter les filtres dans Tabulator&quot;">‚Äã</a></h3><p>En suivant la documentation, je vous laisse ajouter <strong>dans le pr√©c√©dent tableau</strong> des filtres permettant la recherche.</p><p><a href="http://tabulator.info/docs/4.9/filter" target="_blank" rel="noreferrer">La documentation</a></p><h3 id="ajouter-un-element-via-l-ajax" tabindex="-1">Ajouter un √©l√©ment via l&#39;Ajax <a class="header-anchor" href="#ajouter-un-element-via-l-ajax" aria-label="Permalink to &quot;Ajouter un √©l√©ment via l&#39;Ajax&quot;">‚Äã</a></h3><p>Ce n&#39;est pas le but de ce TP, mais si vous souhaitez ajouter un √©l√©ment via une action en Ajax il vous suffit de faire en JavaScript :</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createNewConcert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> formData</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FormData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  formData.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, name);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  formData.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, date);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/api/concert&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { method: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;POST&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, body: formData }).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> response.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="suppression-via-l-ajax" tabindex="-1">Suppression via l&#39;Ajax <a class="header-anchor" href="#suppression-via-l-ajax" aria-label="Permalink to &quot;Suppression via l&#39;Ajax&quot;">‚Äã</a></h3><p>Ce n&#39;est pas le but de ce TP, mais si vous souhaitez supprimer un √©l√©ment via une action en Ajax il vous suffit de faire en JavaScript :</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> deleteNewConcert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/api/deleteConcert&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id, { method: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;DELETE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Vous pouvez par exemple <a href="http://tabulator.info/examples/3.1#callbacks" target="_blank" rel="noreferrer">l&#39;impl√©menter en utilisant</a></p><h2 id="creation-de-l-api-utilisateur" tabindex="-1">Cr√©ation de l&#39;API utilisateur <a class="header-anchor" href="#creation-de-l-api-utilisateur" aria-label="Permalink to &quot;Cr√©ation de l&#39;API utilisateur&quot;">‚Äã</a></h2><p>En reprenant le la d√©marche pr√©c√©dente, je vous laisse impl√©menter la m√™me logique pour cr√©er l&#39;API utilisateur</p><table><thead><tr><th>M√©thode</th><th>Chemin</th><th>Fonctionnalit√©</th></tr></thead><tbody><tr><td>GET</td><td><code>/api/client</code></td><td>Liste de l&#39;ensemble des clients / utilisateurs</td></tr><tr><td>POST</td><td><code>/api/client</code></td><td>Ajout d&#39;un nouvel utilisateur / client (en fournissant les donn√©es en POST)</td></tr><tr><td>DELETE</td><td><code>/api/client/{id}</code></td><td>Suppression d&#39;un utilisateur sp√©cifi√© en param√®tre <code>id</code></td></tr></tbody></table><ul><li>Cr√©ation des API.</li><li>Cr√©ation des routes.</li><li>Cr√©ation du code permettant l&#39;affichage des donn√©es.</li></ul><div class="tip custom-block"><p class="custom-block-title">N&#39;oubliez pas !</p><p>La partie API, c&#39;est bien ! Mais je souhaite avoir en base de donn√©es un jeu d&#39;essai cons√©quent.</p></div>`,54);function b(y,F,v,C,f,A){const a=r("center");return h(),t("div",null,[d,s("div",u,[c,E,l(a,null,{default:p(()=>[g]),_:1})]),m])}const P=n(k,[["render",b]]);export{D as __pageData,P as default};
