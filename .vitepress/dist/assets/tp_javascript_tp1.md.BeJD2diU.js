import{_ as e,c as a,o as s,U as t}from"./chunks/framework.aGaNZw_P.js";const v=JSON.parse(`{"title":"Hello World","description":"C'est un grand classique, nous allons faire notre premier Hello World.","frontmatter":{"description":"C'est un grand classique, nous allons faire notre premier Hello World."},"headers":[],"relativePath":"tp/javascript/tp1.md","filePath":"tp/javascript/tp1.md","lastUpdated":1640899309000}`),o={name:"tp/javascript/tp1.md"},l=t('<h1 id="hello-world" tabindex="-1">Hello World <a class="header-anchor" href="#hello-world" aria-label="Permalink to &quot;Hello World&quot;">​</a></h1><p>C&#39;est un grand classique, nous allons faire notre premier Hello World.</p><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><p>Nous avons vu dans <a href="./support.html">le cours</a> qu&#39;il était possible de mettre de balises script n&#39;importe où dans le code HTML. Je vais vous laisser tester cette fonctionnalité avec trois cas d&#39;usage.</p><h2 id="une-alerte-dans-le-code-html" tabindex="-1">Une alerte dans le code HTML <a class="header-anchor" href="#une-alerte-dans-le-code-html" aria-label="Permalink to &quot;Une alerte dans le code HTML&quot;">​</a></h2><p>En utilisant le support de cours, mettre en place une alerte qui dit « Bonjour à tous » dans une page HTML créée pour l&#39;occasion.</p><h2 id="une-alerte-dans-un-script-externe" tabindex="-1">Une alerte dans un script externe <a class="header-anchor" href="#une-alerte-dans-un-script-externe" aria-label="Permalink to &quot;Une alerte dans un script externe&quot;">​</a></h2><p>Mettre le code dans la page directement n&#39;est pas super. Je vous propose de sortir le code afin de le mettre dans un autre fichier. En utilisant les bonnes pratiques d&#39;organisation que nous avons vues précédemment, je vous laisse mettre votre <code>alert</code> dans un fichier « externe ».</p><p>Une fois mise en place vérifiée que votre code fonctionne tout le temps.</p><h2 id="remplacer-l-alerte-par-un-console-log" tabindex="-1">Remplacer l&#39;alerte par un console.log <a class="header-anchor" href="#remplacer-l-alerte-par-un-console-log" aria-label="Permalink to &quot;Remplacer l&#39;alerte par un console.log&quot;">​</a></h2><p>Je vous propose maintenant de tester la console de votre navigateur. La console vas nous permettre de débugger un programme. Elle va nous permettre également d&#39;afficher du texte (de debug). En utilisant la ligne de code suivante :</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Bonjour à tous&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Tester que celle-ci s&#39;affiche bien dans la console de votre navigateur.</p><div class="tip custom-block"><p class="custom-block-title">Astuce de pro</p><p>Vous avez d&#39;autres possibilités :</p><ul><li><code>console.log</code></li><li><code>console.error</code></li><li><code>console.warn</code></li><li>…</li></ul><p>Je vous laisse les tester.</p></div><p>✋ Oui c&#39;était simple… Mais l&#39;idée est de prendre en main le langage. ✋</p>',15),n=[l];function r(i,d,c,p,u,h){return s(),a("div",null,n)}const g=e(o,[["render",r]]);export{v as __pageData,g as default};
