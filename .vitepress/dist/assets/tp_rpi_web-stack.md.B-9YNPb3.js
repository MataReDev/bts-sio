import{_ as a,a as i}from"./chunks/version2.COGHzh3u.js";import{_ as n,c as t,I as l,w as r,U as s,D as p,o,k as c}from"./chunks/framework.aGaNZw_P.js";const d="/assets/rpi-imager.DYp20Tzv.png",q=JSON.parse(`{"title":"Transformer un Raspberry Pi en server Web","description":"La solution présentée dans cette page décrit l'installation de la solution Open-Source développée par Valentin Brosseau disponible sur GitHub","frontmatter":{"description":"La solution présentée dans cette page décrit l'installation de la solution Open-Source développée par Valentin Brosseau disponible sur GitHub"},"headers":[],"relativePath":"tp/rpi/web-stack.md","filePath":"tp/rpi/web-stack.md","lastUpdated":1674765283000}`),h={name:"tp/rpi/web-stack.md"},u=s('<h1 id="transformer-un-raspberry-pi-en-server-web" tabindex="-1">Transformer un Raspberry Pi en server Web <a class="header-anchor" href="#transformer-un-raspberry-pi-en-server-web" aria-label="Permalink to &quot;Transformer un Raspberry Pi en server Web&quot;">​</a></h1><details class="details custom-block"><summary>Sommaire</summary><nav class="table-of-contents"><ul><li><a href="#introduction">Introduction</a></li><li><a href="#flasher-installer-le-raspberry-pi">Flasher / installer le Raspberry Pi</a><ul><li><a href="#activer-le-ssh">Activer le SSH</a></li></ul></li><li><a href="#installer-docker">Installer Docker</a></li><li><a href="#installer-docker-compose">Installer Docker-Compose</a></li><li><a href="#installer-la-stack-lamp">Installer la stack LAMP</a></li><li><a href="#lancer-la-stack-lamp">Lancer la stack LAMP</a></li><li><a href="#fonctionnement">Fonctionnement</a></li><li><a href="#acces-a-la-base-de-donnees">Accès à la base de données</a></li><li><a href="#fonctionnement-du-ftp-integre">Fonctionnement du FTP intégré</a><ul><li><a href="#mode-1-ouvert-a-tous">Mode 1 : Ouvert à tous.</a></li><li><a href="#mode-2-le-mode-classique">Mode 2 : Le mode classique</a></li></ul></li><li><a href="#acceder-a-votre-raspberry-pi">Accéder à votre Raspberry Pi</a></li></ul></nav></details><div class="tip custom-block"><p class="custom-block-title">C&#39;est Open-Source</p><p>La solution présentée dans cette page décrit l&#39;installation de la solution Open-Source développée par Valentin Brosseau <a href="https://github.com/c4software/rpi-docker-lamp-stack" target="_blank" rel="noreferrer">disponible sur GitHub</a></p></div><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><p>Dans cette page nous allons détailler la mise en place d&#39;un serveur web « Multi-utilisateur » / « Multi-Projets ». Ce serveur reposera sur une plateforme connue du type Raspberry Pi et sur le système de container Docker.</p><p>La solution final pourra ressembler à :</p><table><thead><tr><th><img src="'+a+'" alt="Version 1" loading="lazy"></th><th><img src="'+i+'" alt="Version 2" loading="lazy"></th></tr></thead></table><p><img src="https://github.com/c4software/rpi-docker-lamp-stack/blob/main/home.png?raw=true" alt="Dashboard" loading="lazy"></p><div class="warning custom-block"><p class="custom-block-title">Un détail qui compte</p><p>Ce que nous allons installer n&#39;est pas conçu pour héberger des sites publics. Pourquoi ? La configuration du serveur Apache est trop permissive et ne convient que pour du développement.</p><p>L&#39;autre raison est le FTP, celui-ci est volontairement ouvert à toutes les connexions. Ce fonctionnement nous sera très utile pour la phase de création d&#39;un site, mais <strong>c&#39;est bien évidemment à proscrire</strong> pour une machine ouverte sur Internet.</p></div><p>Ce que nous allons installé s&#39;appelle une stack LAMP (Linux, Apache, MySQL, PHP) elle ne diffère pas de celle que vous pouvez installer sur votre ordinateur avec des logiciels tels que (XAMPP ou WAMP ou autres). La seule différence c&#39;est que nous allons dédier une machine pour ça.</p>',10),k=c("iframe",{width:"560",height:"315",src:"https://www.youtube-nocookie.com/embed/y7HzFidjKjs",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""},null,-1),m=s('<h2 id="flasher-installer-le-raspberry-pi" tabindex="-1">Flasher / installer le Raspberry Pi <a class="header-anchor" href="#flasher-installer-le-raspberry-pi" aria-label="Permalink to &quot;Flasher / installer le Raspberry Pi&quot;">​</a></h2><p>La première étape va être d&#39;installer le système d&#39;exploitation de votre Raspberry Pi. Pour cette étape, il n&#39;y a pas vraiment de règle. Personnellement j&#39;utilise l&#39;outil fourni par la fondation :</p><ul><li><a href="https://www.raspberrypi.org/software/" target="_blank" rel="noreferrer">Raspberry Pi Imager</a></li></ul><p><img src="'+d+`" alt="Rpi imager" loading="lazy"></p><p>Pour le choix de la version du système, je vous propose de partir sur celui le plus light possible à savoir « Raspberry Pi OS Lite ».</p><div class="tip custom-block"><p class="custom-block-title">Pas de bureau</p><p>La version Lite ne contient aucun environnement de bureau. Il faudra donc activer le SSH (accès distant) avant de démarrer le Raspberry Pi. Cet accès SSH nous permettra d&#39;effectuer les quelques commandes nécessaires au démarrage de notre future LAMP.</p></div><h3 id="activer-le-ssh" tabindex="-1">Activer le SSH <a class="header-anchor" href="#activer-le-ssh" aria-label="Permalink to &quot;Activer le SSH&quot;">​</a></h3><p>Avant de redémarrer le Raspberry Pi avec la carte SD inséré, nous allons activer le SSH sur le « mini-ordinateur ». Pour ça rien de bien compliqué il suffit de créer un fichier nommé <code>ssh</code> sur la partition de boot de la carte SD.</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Exemple sous mac</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /Volumes/boot/ssh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Une fois le fichier créé vous pouvez retirer la Carte SD et l&#39;insérer dans votre Raspberry Pi</p><h2 id="installer-docker" tabindex="-1">Installer Docker <a class="header-anchor" href="#installer-docker" aria-label="Permalink to &quot;Installer Docker&quot;">​</a></h2><p>Docker n&#39;est pas disponible de base sur l&#39;OS fourni par la fondation. Par contre il est très simple de l&#39;installer grace au système de paquet intégré à Raspbian (pardon Raspberry Pi OS).</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Étape 1 : Mettre à jour l&#39;OS</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upgrade</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Étape 2 : Télécharger et lancer le script d&#39;installation de Docker</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://get.docker.com</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get-docker.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get-docker.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Étape 3 : Autoriser l&#39;utilisateur pi (celui par défaut) à lancer la commande docker</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> usermod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -aG</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pi</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">Attention danger</p><p>De manière générale lancer <strong>en root</strong> un script téléchargé depuis Internet est une <strong>très mauvaise pratique</strong>.</p></div><h2 id="installer-docker-compose" tabindex="-1">Installer Docker-Compose <a class="header-anchor" href="#installer-docker-compose" aria-label="Permalink to &quot;Installer Docker-Compose&quot;">​</a></h2><p>Docker compose est un ajout intéressant à Docker, il va nous permettre de définir des « stacks applicatives » à base de différent container Docker. Dans notre cas, ça va être très intéressant en effet un serveur LAMP est en réalité constitué de différents logiciels :</p><ul><li>Apache + PHP.</li><li>MySQL.</li><li>Un serveur FTP.</li></ul><p>Pour l&#39;installer, il suffit de faire :</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libffi-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libssl-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3-pip</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pip3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-compose</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>À partir de maintenant vous avez l&#39;ensemble des outils permettant de lancer notre serveur LAMP. D&#39;ailleurs ce que nous avons installé nous permettra de faire bien plus. Il sera possible de lancer n&#39;importe quelle image Docker (pratique 😉)</p></div><h2 id="installer-la-stack-lamp" tabindex="-1">Installer la stack LAMP <a class="header-anchor" href="#installer-la-stack-lamp" aria-label="Permalink to &quot;Installer la stack LAMP&quot;">​</a></h2><p>Docker est maintenant disponible sur notre machine. Nous allons donc simplement récupérer les sources « de la stacks » LAMP pour la lancer sur notre Raspberry Pi. Le code est entièrement disponible sur <a href="https://github.com/c4software/rpi-docker-lamp-stack" target="_blank" rel="noreferrer">mon compte Github</a> nous allons donc avoir besoin de <code>git</code> pour le récupérer :</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Puis</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:c4software/rpi-docker-lamp-stack.git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>En réalisant cette commande vous allez créer dans <strong>le dossier courant</strong> un dossier nommé <code>rpi-docker-lamp-stack</code> celui-ci contiendra l&#39;ensemble du code nécessaire au fonctionnement du logiciel.</p></div><h2 id="lancer-la-stack-lamp" tabindex="-1">Lancer la stack LAMP <a class="header-anchor" href="#lancer-la-stack-lamp" aria-label="Permalink to &quot;Lancer la stack LAMP&quot;">​</a></h2><p>Maintenant que le code est sur votre Raspberry Pi. Il suffit de le lancer pour le rendre actif. Avec Docker, pas d&#39;icône sur le bureau! Il suffit de :</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rpi-docker-lamp-stack</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">Et c&#39;est parti !</p><p>Votre stack LAMP est maintenant disponible sur votre Raspberry Pi. Vous pouvez y accéder via votre navigateur à l&#39;adresse :</p><p><a href="http://raspberrypi.local/" target="_blank" rel="noreferrer">http://raspberrypi.local/</a></p></div><h2 id="fonctionnement" tabindex="-1">Fonctionnement <a class="header-anchor" href="#fonctionnement" aria-label="Permalink to &quot;Fonctionnement&quot;">​</a></h2><p>Vous avez donc lancé l&#39;ensemble des services de la stack LAMP sur votre Raspberry PI. C&#39;est terminé ! Votre serveur est prêt à recevoir vos projets ; Votre Raspberry Pi expose les services suivants :</p><table><thead><tr><th>Service</th><th style="text-align:right;">Port</th></tr></thead><tbody><tr><td>HTTP</td><td style="text-align:right;">80</td></tr><tr><td>FTP</td><td style="text-align:right;">20121</td></tr><tr><td>SQL</td><td style="text-align:right;">3306</td></tr></tbody></table><p>Nous avons donc :</p><ul><li>Un Serveur Web (Apache + PHP)</li><li>Un Serveur SQL (MariaDB)</li><li>Un serveur FTP (pour envoyer votre code source)</li></ul><h2 id="acces-a-la-base-de-donnees" tabindex="-1">Accès à la base de données <a class="header-anchor" href="#acces-a-la-base-de-donnees" aria-label="Permalink to &quot;Accès à la base de données&quot;">​</a></h2><p>Pour accéder à la base de données, vous avez deux possibilités :</p><ul><li>Avec un logiciel depuis votre poste.</li><li><a href="http://raspberrypi.local/adminer/" target="_blank" rel="noreferrer">Via Adminer, intégré dans la stack</a></li></ul><p>Pour les login / mot de passe :</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">host: mariadb</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">user: root</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">password: MARIADB</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">secret</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="fonctionnement-du-ftp-integre" tabindex="-1">Fonctionnement du FTP intégré <a class="header-anchor" href="#fonctionnement-du-ftp-integre" aria-label="Permalink to &quot;Fonctionnement du FTP intégré&quot;">​</a></h2><p>Le FTP possède deux modes de fonctionnement :</p><ul><li>Un mode « ouvert à tous » avec des mots de passe autogénérés acceptant l&#39;ensemble des utilisateurs présentant le bon format de mot de passe.</li><li>Un mode classique reposant sur une liste de comptes « préalablement fournie ».</li></ul><p>Nous avons donc un serveur FTP, celui-ci est disponible sur le port 20121 (pourquoi pas sur le port 21 ? Tout simplement pour <em>réduire</em> un piratage…). Il fonctionne comme un FTP classique, vous devez donc utiliser un logiciel du type <a href="https://filezilla-project.org/" target="_blank" rel="noreferrer">Filezilla</a>, <a href="https://cyberduck.io/" target="_blank" rel="noreferrer">Cyberduck</a>.</p><div class="danger custom-block"><p class="custom-block-title">À noter</p><p>Les deux modes sont exclusifs, si vous fournissez une liste d&#39;utilisateurs (mode classique) celui-ci remplacera le mode automatique.</p></div><h3 id="mode-1-ouvert-a-tous" tabindex="-1">Mode 1 : Ouvert à tous. <a class="header-anchor" href="#mode-1-ouvert-a-tous" aria-label="Permalink to &quot;Mode 1 : Ouvert à tous.&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">IMPORTANT</p><p>Le FTP intégré est un peu particulier. Il est volontairement ouvert à tous, qu&#39;est-ce que ça veut dire concrètement ?</p></div><p>Pour le fonctionnement, celui-ci accepte n&#39;import quel nom d&#39;utilisateur du moment que le mot de passe fourni respecte le formalisme suivant :</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># Example</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">username: john</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">password: RPI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">john</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LAMP</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># Or</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">username: valentin</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">password: RPI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">valentin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LAMP</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># Or</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">username: sample</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">password: RPI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sample</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LAMP</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># Or</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">username: anythingyouwant</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">password: RPI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">anythingyouwant</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LAMP</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># etc.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>Le compte de l&#39;utilisateur est automatiquement créé lors de la première connexion. Dès l&#39;instant que le FTP fonctionne, la partie WEB fonctionnera également 🚀.</p><h3 id="mode-2-le-mode-classique" tabindex="-1">Mode 2 : Le mode classique <a class="header-anchor" href="#mode-2-le-mode-classique" aria-label="Permalink to &quot;Mode 2 : Le mode classique&quot;">​</a></h3><p>Dans le mode classique, vous devez spécifier la liste des utilisateurs ayant accès au FTP. Cette liste est au format <code>JSON</code>, le fichier est dans <code>ftp/users/users.json</code>. La liste doit-être au format JSON par exemple :</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;votreUtilisateur&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;votreMotDePasse&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;votreUtilisateur2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;votreMotDePasse2&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="acceder-a-votre-raspberry-pi" tabindex="-1">Accéder à votre Raspberry Pi <a class="header-anchor" href="#acceder-a-votre-raspberry-pi" aria-label="Permalink to &quot;Accéder à votre Raspberry Pi&quot;">​</a></h2><p>Maintenant que vous avez envoyé votre code source sur le serveur FTP celui-ci est accessible via le lien :</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//raspberrypi.local/~lenomducompte</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,56);function b(g,v,y,E,F,f){const e=p("center");return o(),t("div",null,[u,l(e,null,{default:r(()=>[k]),_:1}),m])}const A=n(h,[["render",b]]);export{q as __pageData,A as default};
