import{_ as s,c as a,o as e,U as i}from"./chunks/framework.aGaNZw_P.js";const n="/assets/gitlabci-build.Cf1um4M_.png",g=JSON.parse('{"title":"Utiliser GitLab Pages","description":"Dans ce TP vous allez mettre en place grâce à Gitlab-CI un site web statique hébergé par Gitlab Pages. Dans le TP d’introduction au travail collaboratif vous avez travaillé à plusieurs avec une visualisation quasi temps réel des modifications après les commits, c’était réalisé grâce à GitLab-CI et GitLab Pages. Avec un fichier et quelques configurations, vous allez être capable de réaliser la même chose dans vos projets.","frontmatter":{"description":"Dans ce TP vous allez mettre en place grâce à Gitlab-CI un site web statique hébergé par Gitlab Pages. Dans le TP d’introduction au travail collaboratif vous avez travaillé à plusieurs avec une visualisation quasi temps réel des modifications après les commits, c’était réalisé grâce à GitLab-CI et GitLab Pages. Avec un fichier et quelques configurations, vous allez être capable de réaliser la même chose dans vos projets."},"headers":[],"relativePath":"tp/ci/pages.md","filePath":"tp/ci/pages.md","lastUpdated":1645050225000}'),t={name:"tp/ci/pages.md"},l=i(`<h1 id="utiliser-gitlab-pages" tabindex="-1">Utiliser GitLab Pages <a class="header-anchor" href="#utiliser-gitlab-pages" aria-label="Permalink to &quot;Utiliser GitLab Pages&quot;">​</a></h1><details class="details custom-block"><summary>Sommaire</summary><nav class="table-of-contents"><ul><li><a href="#introduction">Introduction</a></li><li><a href="#creation-d-un-nouveau-projet-sur-gitlab">Création d’un nouveau projet sur Gitlab</a></li><li><a href="#creation-d-un-site-statique">Création d’un site statique</a></li><li><a href="#activation-de-gitlab-ci">Activation de GitLab-CI</a></li><li><a href="#push-de-votre-code">Push de votre code</a></li><li><a href="#allez-plus-loin">Allez plus loin</a><ul><li><a href="#deployer-un-site-vuejs">Déployer un site VueJS</a></li><li><a href="#les-moteurs-de-site-statique">Les moteurs de site statique</a></li><li><a href="#exemple-avec-hugo">Exemple avec Hugo</a></li><li><a href="#exemple-avec-jekyll">Exemple avec Jekyll</a></li></ul></li></ul></nav></details><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><p>Dans ce TP vous allez mettre en place grâce à Gitlab-CI un site web statique hébergé par Gitlab Pages. Dans le TP d’introduction au travail collaboratif, vous avez travaillé à plusieurs avec une visualisation quasi temps réel des modifications après les commits, c’était réalisé grâce à GitLab-CI et GitLab Pages. Avec un fichier et quelques configurations, vous allez être capable de réaliser la même chose dans vos projets.</p><h2 id="creation-d-un-nouveau-projet-sur-gitlab" tabindex="-1">Création d’un nouveau projet sur Gitlab <a class="header-anchor" href="#creation-d-un-nouveau-projet-sur-gitlab" aria-label="Permalink to &quot;Création d’un nouveau projet sur Gitlab&quot;">​</a></h2><p>Pour commencer, créez <a href="https://gitlab.com/projects/new" target="_blank" rel="noreferrer">un nouveau projet sur votre compte Gitlab</a>. Nommer le comme vous voulez, c’est votre projet après tout…</p><p>Voilà nous pouvons continuer !</p><h2 id="creation-d-un-site-statique" tabindex="-1">Création d’un site statique <a class="header-anchor" href="#creation-d-un-site-statique" aria-label="Permalink to &quot;Création d’un site statique&quot;">​</a></h2><p>Créez rapidement sur votre machine un site statique, une simple page web HTML est suffisante (vous pouvez également partir <a href="https://startbootstrap.com/?showPro=false&amp;showAngular=false" target="_blank" rel="noreferrer">d’un template disponible ici</a>).</p><p>Une fois votre page prête, commitez et pushez votre travail sur GitLab (dans le projet que vous avez créé)</p><p>Rappel :</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -A</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -am</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Premier Commit&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>⚠️ Pour pusher votre code il faut avoir ajouté la remote, pour ça vous pouvez suivre les instructions données par GitLab lors de la création du projet.</p><h2 id="activation-de-gitlab-ci" tabindex="-1">Activation de GitLab-CI <a class="header-anchor" href="#activation-de-gitlab-ci" aria-label="Permalink to &quot;Activation de GitLab-CI&quot;">​</a></h2><p>Maintenant que votre première version est prête, nous allons activer Gitlab-CI pour ça il faut <strong>simplement</strong> créer un fichier intitulé <code>.gitlab-ci.yml</code> à la racine de votre projet. Mettez-y le contenu suivant :</p><div class="language-yml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">pages</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  stage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">deploy</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">mkdir .public</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">cp -r * .public</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">mv .public public</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  artifacts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    paths</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">public</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  only</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">master</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li>Regarder le contenu du fichier, étudier les différentes instructions.</li></ul><h2 id="push-de-votre-code" tabindex="-1">Push de votre code <a class="header-anchor" href="#push-de-votre-code" aria-label="Permalink to &quot;Push de votre code&quot;">​</a></h2><p>Pushez votre code sur GitLab, votre projet va maintenant « se compiler » dans la partie CI. Attendez quelques secondes, votre site web est maintenant en ligne.</p><h2 id="allez-plus-loin" tabindex="-1">Allez plus loin <a class="header-anchor" href="#allez-plus-loin" aria-label="Permalink to &quot;Allez plus loin&quot;">​</a></h2><p>Écrire du code c’est bien, mais le faire en automatique c’est mieux. C’est pour ça que GitLab-CI et GitLab Pages existent, écrire du HTML pour une page c’est possible, mais quand il s’agit d’un site entier, ce n’est pas forcément adapté. C’est pour ça que l’on utilise régulièrement des CMS (écrit en PHP, Python, Ruby, …), mais ce n’est pas la seule façon de faire.</p><p>On trouve aussi régulièrement des « générateurs de sites statiques », un générateur c’est un « logiciel » qui va « compiler » votre site pour générer toutes les pages de votre site web (sans avoir à tous les écrire).</p><p>Plusieurs avantages :</p><ul><li>Cout d’hébergement réduit (pas de PHP, juste du HTML).</li><li>Sauvegarde simple (c’est juste des fichiers).</li><li>Rapide ! (Oui, pas de PHP).</li></ul><p>Inconvénients :</p><ul><li>À votre avis ?</li></ul><h3 id="deployer-un-site-vuejs" tabindex="-1">Déployer un site VueJS <a class="header-anchor" href="#deployer-un-site-vuejs" aria-label="Permalink to &quot;Déployer un site VueJS&quot;">​</a></h3><p>Nous l&#39;avons vu avec Netlify déployer un site VueJS (ViteJS) est très simple. Le faire avec Gitlab-CI et Gitlab Pages est tout aussi simple ! Je vous laisse envoyer votre code source dans un nouveau projet <code>Gitlab</code>. Nous allons lui ajouter le fichier <code>gitlab-ci.yml</code> suivant :</p><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">pages</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">node:latest</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  stage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">deploy</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">npm install</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">npm run gitlab</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">mv public public-vue</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">mv dist public</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  artifacts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    paths</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">public</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  only</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">master</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h4 id="npm-run-gitlab" tabindex="-1">npm run gitlab ? <a class="header-anchor" href="#npm-run-gitlab" aria-label="Permalink to &quot;npm run gitlab ?&quot;">​</a></h4><p>Nous avons ici une petite spécificité, avec Gitlab Pages, les fichiers sont distribués dans un sous dossier. Il faut donc indiquer à ViteJS que la base de notre projet ne sera pas à la racine, mais dans un sous dossier.</p><p>Dans la documentation de ViteJS, nous trouvons <a href="https://vitejs.dev/guide/build.html#public-base-path" target="_blank" rel="noreferrer">donc la réponse ici</a></p><p>Je vous propose donc d&#39;ajouter dans votre fichier <code>package.json</code> la configuration suivante dans la partie script :</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;gitlab&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vite build --base=./&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">Comprendre le fonctionnement</p><p>Vous voyez ici que finalement l&#39;important c&#39;est de comprendre le fonctionnement pour l&#39;adapter à notre besoin. Dans le cadre du CI/CD, il faut souvent lire la documentation, adapter, réessayer, etc.</p><p>Mais une fois configuré… La vie sera belle et votre travail en grande partie automatisé.</p></div><h4 id="resultat" tabindex="-1">Résultat <a class="header-anchor" href="#resultat" aria-label="Permalink to &quot;Résultat&quot;">​</a></h4><p><img src="`+n+`" alt="Gitlab-ci" loading="lazy"></p><p>Une fois compilé votre site est accessible <a href="https://vbrosseau.gitlab.io/vitejs-sample/" target="_blank" rel="noreferrer">pour moi</a></p><h4 id="je-vous-laisse-modifier" tabindex="-1">Je vous laisse modifier <a class="header-anchor" href="#je-vous-laisse-modifier" aria-label="Permalink to &quot;Je vous laisse modifier&quot;">​</a></h4><p>Je vous laisse modifier votre code source. Vous constaterez que comme Netlify votre site se met à jour automatiquement à chaque push.</p><h3 id="les-moteurs-de-site-statique" tabindex="-1">Les moteurs de site statique <a class="header-anchor" href="#les-moteurs-de-site-statique" aria-label="Permalink to &quot;Les moteurs de site statique&quot;">​</a></h3><p>Comme toujours, il y a plusieurs choix pour faire des sites statiques, voici 3 exemples :</p><ul><li><a href="https://jekyllrb.com/" target="_blank" rel="noreferrer">Jekyll</a></li><li><a href="http://gohugo.io/" target="_blank" rel="noreferrer">Hugo</a></li><li><a href="https://blog.getpelican.com/" target="_blank" rel="noreferrer">Pelican</a></li></ul><h3 id="exemple-avec-hugo" tabindex="-1">Exemple avec Hugo <a class="header-anchor" href="#exemple-avec-hugo" aria-label="Permalink to &quot;Exemple avec Hugo&quot;">​</a></h3><p>Téléchargez le projet suivant <a href="https://gitlab.com/pages/hugo" target="_blank" rel="noreferrer">Exemple de site avec Hugo</a>, créez un nouveau projet dans votre compte GitLab et envoyez les sources.</p><ul><li>Regarder le contenu du <code>.gitlab-ci.yml</code> :</li></ul><div class="language-yml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># All available Hugo versions are listed here: https://gitlab.com/pages/hugo/container_registry</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">registry.gitlab.com/pages/hugo:latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">variables</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  GIT_SUBMODULE_STRATEGY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">recursive</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">hugo</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  except</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">master</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">pages</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">hugo</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  artifacts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    paths</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">public</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  only</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">master</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>Celui-ci est très proche du nôtre, et c’est normal ! Avec Gitlab-CI c’est toujours très simple à mettre en place.</p><h3 id="exemple-avec-jekyll" tabindex="-1">Exemple avec Jekyll <a class="header-anchor" href="#exemple-avec-jekyll" aria-label="Permalink to &quot;Exemple avec Jekyll&quot;">​</a></h3><p>C’est à vous… Inspirez-vous <a href="https://docs.gitlab.com/ee/user/project/pages/getting_started/pages_from_scratch.html" target="_blank" rel="noreferrer">du wiki de Gitlab</a> et <a href="https://docs.gitlab.com/ee/user/project/pages/getting_started/pages_ci_cd_template.html" target="_blank" rel="noreferrer">des templates.</a></p>`,50),r=[l];function p(o,h,u,c,d,k){return e(),a("div",null,r)}const m=s(t,[["render",p]]);export{g as __pageData,m as default};
