import{_ as e,c as a,o as s,U as n}from"./chunks/framework.aGaNZw_P.js";const i="/assets/home-demo.Dz0ThrKT.jpg",o="/assets/form.BtcRBfWH.png",r="/assets/flow_login_tp5.C3BwX1ji.png",f=JSON.parse(`{"title":"Protéger des pages à l'aide de la session","description":"","frontmatter":{},"headers":[],"relativePath":"tp/php/tp5.md","filePath":"tp/php/tp5.md","lastUpdated":1694080366000}`),l={name:"tp/php/tp5.md"},t=n('<h1 id="proteger-des-pages-a-l-aide-de-la-session" tabindex="-1">Protéger des pages à l&#39;aide de la session <a class="header-anchor" href="#proteger-des-pages-a-l-aide-de-la-session" aria-label="Permalink to &quot;Protéger des pages à l&#39;aide de la session&quot;">​</a></h1><p>Dans ce TP nous allons voir comment ajouter une couche d&#39;authentification sur vos pages PHP.</p><details class="details custom-block"><summary>Sommaire</summary><nav class="table-of-contents"><ul><li><a href="#projet-de-reference">Projet de référence</a></li><li><a href="#creation-de-la-home">Création de la Home</a></li><li><a href="#utiliser-la-session-pour-creer-un-acces-protege">Utiliser la session pour créer un accès protégé</a><ul><li><a href="#creer-la-page">Créer la page</a></li><li><a href="#tester-votre-page">Tester votre page</a></li><li><a href="#verifier-l-authentification">Vérifier l&#39;authentification</a></li><li><a href="#autoriser-l-acces-a-la-page-de-generation-ou-pas">Autoriser l&#39;accès à la page de génération (ou pas)</a></li><li><a href="#gerer-la-deconnexion">Gérer la déconnexion</a></li><li><a href="#evolution-finale-une-securite-bien-geree">Évolution finale : Une sécurité bien gérée</a></li></ul></li></ul></nav></details><h2 id="projet-de-reference" tabindex="-1">Projet de référence <a class="header-anchor" href="#projet-de-reference" aria-label="Permalink to &quot;Projet de référence&quot;">​</a></h2><p>Pour continuer ce TP, vous devez reprendre le code du <a href="./tp4.html">TP précédent sur l&#39;utilisation de la Session / Cookies</a>. Ce TP va donc être découpé en plusieurs étapes :</p><ul><li>Création d&#39;une page « Home » affichée à l&#39;arrivée sur le site.</li><li>Création d&#39;une page « Login » qui permettra à l&#39;utilisateur de s&#39;authentifier.</li><li>Gestion de l&#39;authentification et des autorisations dans la Whitelist.</li></ul><h2 id="creation-de-la-home" tabindex="-1">Création de la Home <a class="header-anchor" href="#creation-de-la-home" aria-label="Permalink to &quot;Création de la Home&quot;">​</a></h2><p>Bon ici pas d&#39;aide, je pense que vous savez tous créer un fichier <code>.php</code>. Votre page doit être rangée correctement. En regardant le projet, vous pouvez voir que les pages sont rangées dans le dossier <code>pages</code>. Je vous laisse créer la page d&#39;accueil de votre site.</p><p>N&#39;oubliez pas de l&#39;autoriser dans la whitelist. <strong>Point important</strong> cette page doit s&#39;afficher lors de l&#39;accès à votre site Internet.</p><p><img src="'+i+'" alt="Home démo" loading="lazy"></p><div class="tip custom-block"><p class="custom-block-title">N&#39;oubliez pas</p><p>N&#39;oubliez pas d&#39;y inclure un lien vers votre future page de connexion.</p></div><h2 id="utiliser-la-session-pour-creer-un-acces-protege" tabindex="-1">Utiliser la session pour créer un accès protégé <a class="header-anchor" href="#utiliser-la-session-pour-creer-un-acces-protege" aria-label="Permalink to &quot;Utiliser la session pour créer un accès protégé&quot;">​</a></h2><p>Nous avons vu qu&#39;il était possible assez simplement de sauvegarder des informations persistantes entre les rechargements avec une SESSION (ou un Cookie). Je vous propose de réfléchir à l&#39;utilisation de la SESSION pour sauvegarder une authentification.</p><p>Nous allons sauvegarder des informations dans celle-ci pour sauvegarder la réussite d&#39;un login utilisateur. Pour ça, je vous propose de réaliser une nouvelle page PHP, celle-ci va contenir :</p><ul><li>Un formulaire</li><li>Un message indiquant « Bienvenue EMAIL » si la personne c&#39;est connecté avec le bon « EMAIL &amp; MOT DE PASSE ».</li></ul><h3 id="creer-la-page" tabindex="-1">Créer la page <a class="header-anchor" href="#creer-la-page" aria-label="Permalink to &quot;Créer la page&quot;">​</a></h3><p>Bon ici pas d&#39;aide, je pense que vous savez tous créer un fichier <code>.php</code>. Votre page doit être rangée correctement. En regardant le projet, vous pouvez voir que les pages sont rangées dans le dossier <code>pages</code>.</p><p>Dans la nouvelle page, je vous propose de créer un simple formulaire. Pour le formulaire, vous pouvez de <a href="https://getbootstrap.com/docs/4.0/components/forms/" target="_blank" rel="noreferrer">vous inspirer de ceux proposés par Bootstrap.</a></p><div class="warning custom-block"><p class="custom-block-title">N&#39;oubliez pas…</p><p>Pour que Bootstrap fonctionne, votre site doit avoir la librairie Bootstrap. Si ce n&#39;est pas le cas, vous pouvez l&#39;ajouter dans le fichier <code>header.php</code>.</p><details class="details custom-block"><summary>D&#39;ailleurs, pourquoi dans <code>header.php</code> ?</summary><p>L&#39;organisation ! Voilà pourquoi, en organisant notre code, nous allons produire des applicatifs de « qualité » ou il sera simple d&#39;y apporter des modifications (demain, à la fin de l&#39;année, dans 10 ans).</p></details></div><p>:::</p><div class="tip custom-block"><p class="custom-block-title">GET ou POST ?</p><p>À votre avis ? GET ou POST pour notre formulaire ?</p></div><p>Je vous laisse créer un formulaire similaire à :</p><p><img src="'+o+'" alt="Exemple de formulaire" loading="lazy"></p><p>PS: En Français dans notre cas…</p><h3 id="tester-votre-page" tabindex="-1">Tester votre page <a class="header-anchor" href="#tester-votre-page" aria-label="Permalink to &quot;Tester votre page&quot;">​</a></h3><p>Comment accéder à votre page ? Avec l&#39;organisation proposée vous ne pouvez pas accéder directement à votre page PHP pour l&#39;afficher. <strong>Vous devez</strong> passer par <code>l&#39;entry-point</code>, c&#39;est pour ça que les liens auront la forme suivante :</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>index.php?page=login</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>ou par exemple :</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>index.php?page=logout</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">Le point important</p><p>Ici, il est important de constater l&#39;usage d&#39;une variable nommée page. Celle-ci est utilisé dans le fichier <code>index.php</code> pour charger la page que l&#39;utilisateur souhaite.</p></div><h3 id="verifier-l-authentification" tabindex="-1">Vérifier l&#39;authentification <a class="header-anchor" href="#verifier-l-authentification" aria-label="Permalink to &quot;Vérifier l&#39;authentification&quot;">​</a></h3><p>La logique que nous allons mettre en place est la suivante :</p><p><img src="'+r+`" alt="Flow authentification" loading="lazy"></p><p>Pour vérifier l&#39;authentification, nous allons rester simples (car ici l&#39;objectif est de voir la SESSION, rien de plus). Je vous propose de considérer une authentification valide si :</p><ul><li>Email == &quot;<a href="mailto:admin@exemple.com" target="_blank" rel="noreferrer">admin@exemple.com</a>&quot;</li><li>Mot de passe == &quot;mdp&quot;</li></ul><p>Si nous écrivons « l&#39;algo » de notre vérification d&#39;authentification, ça va donner :</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>SI email === &quot;admin@exemple.com&quot; ET mot_de_passe == &quot;mdp&quot; ALORS</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    SAUVEGARDER_DANS_LA_SESSION[CONNECTE] = email</span></span>
<span class="line"><span></span></span>
<span class="line"><span>FIN SI</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="danger custom-block"><p class="custom-block-title">Non !</p><p>Évidemment, nous sommes d&#39;accord <strong>c&#39;est nul</strong> en termes de sécurité ! Vous ne devez JAMAIS « écrire en dur » un login de mot de passe dans votre code.</p><p>=&gt; À votre avis pourquoi ?</p></div><ul><li>C&#39;est à vous, je vous laisse écrire le code dans la page que vous avez précédemment créée.</li></ul><h3 id="autoriser-l-acces-a-la-page-de-generation-ou-pas" tabindex="-1">Autoriser l&#39;accès à la page de génération (ou pas) <a class="header-anchor" href="#autoriser-l-acces-a-la-page-de-generation-ou-pas" aria-label="Permalink to &quot;Autoriser l&#39;accès à la page de génération (ou pas)&quot;">​</a></h3><p>Maintenant que nous avons sauvegardé dans la SESSION le fait que la personne est connectée, je vous propose de conditionner l&#39;affichage du formulaire ; celui-ci ne doit pas être visible si la personne est connectée. Comment allons-nous faire ça ? En utilisant la Whiteliste évidemment !</p><p>Vous devez conditionner votre Whiteliste en fonction de l&#39;état de connexion de votre utilisateur, exemple en <code>algo</code> :</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$whitelist = [];</span></span>
<span class="line"><span></span></span>
<span class="line"><span>SI EST DEFINI (SAUVEGARDER_DANS_LA_SESSION[CONNECTE]) ALORS</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    $whitelist = [&#39;bart&#39;, &#39;home&#39;, &#39;logout&#39;];</span></span>
<span class="line"><span></span></span>
<span class="line"><span>SINON SI</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    $whitelist = [&#39;login&#39;, &#39;home&#39;];</span></span>
<span class="line"><span></span></span>
<span class="line"><span>FIN SI</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">prenez le temps de réfléchir et comprendre le code proposé</p><p>Avant de continuer, arrêtons-nous un instant sur le code proposé :</p><ul><li>Que veut-il dire ?</li><li>Où celui-ci doit-être mis ?</li><li>Avons-nous déjà une variable $whitelist ?</li></ul></div><p>Il faudra donc :</p><ul><li>Faire une condition (if) pour vérifier que l&#39;élément est présent en SESSION : <ul><li>Si présent =&gt; autoriser de la page <code>de génération des punitions</code>.</li><li>Si non présent =&gt; autoriser les pages dites « publiques » de la page <code>Home</code>.</li></ul></li></ul><div class="warning custom-block"><p class="custom-block-title">Note pour le vous du futur</p><p>Aujourd&#39;hui nous parlons de Whitelist, demain nous emploierons le terme de <code>Router</code>. C&#39;est bien évidemment différent, mais le résultat sera le même :</p><p><strong>Seulement les pages déclarées seront accessibles</strong></p></div><h3 id="gerer-la-deconnexion" tabindex="-1">Gérer la déconnexion <a class="header-anchor" href="#gerer-la-deconnexion" aria-label="Permalink to &quot;Gérer la déconnexion&quot;">​</a></h3><p>À votre avis, comment allons-nous gérer la déconnexion ?</p><h3 id="evolution-finale-une-securite-bien-geree" tabindex="-1">Évolution finale : Une sécurité bien gérée <a class="header-anchor" href="#evolution-finale-une-securite-bien-geree" aria-label="Permalink to &quot;Évolution finale : Une sécurité bien gérée&quot;">​</a></h3><p>Pour tester, nous avons mis un login et un mot de passe en dur. Évidemment dans la vraie vie ce n&#39;est pas comme ça que nous procèderons. Je vous laisse créer la base de données et la table permettant de sauvegarder un mot de passe <strong>en intégrant les notions de sécurité</strong>.</p><ul><li>Le mot de passe ne doit pas être en clair.</li><li>Ajouter dans le projet la connexion à la base de données. <ul><li>Comment ?</li><li>Où ?</li></ul></li><li>Intégrer le code permettant de valider le mot de passe fourni par l&#39;utilisateur.</li><li>Valider le bon fonctionnement avec un jeu d&#39;essai.</li></ul><div class="danger custom-block"><p class="custom-block-title">Un peu d&#39;aide</p><ul><li>Comment allez-vous enregistrer le mot de passe en base ? (<a href="https://www.php.net/manual/en/function.password-hash.php" target="_blank" rel="noreferrer">Un peu d&#39;aide</a>)</li><li>Comment allez-vous vérifier l&#39;authentification ? (<a href="https://www.php.net/manual/en/function.password-verify.php" target="_blank" rel="noreferrer">Un peu d&#39;aide</a>)</li></ul></div>`,53),p=[t];function u(c,d,m,h,g,v){return s(),a("div",null,p)}const S=e(l,[["render",u]]);export{f as __pageData,S as default};
