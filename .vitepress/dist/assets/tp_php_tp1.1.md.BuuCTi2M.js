import{_ as e,c as a,o as s,U as i}from"./chunks/framework.aGaNZw_P.js";const r="/assets/bart-generator.CVVEy2o4.png",b=JSON.parse(`{"title":"Le générateur de Bart","description":"Le meilleur moyen de comprendre les boucles. C'est d'en écrire par soi-même. Je vous propose de créer votre propre générateur de Bart.","frontmatter":{"description":"Le meilleur moyen de comprendre les boucles. C'est d'en écrire par soi-même. Je vous propose de créer votre propre générateur de Bart."},"headers":[],"relativePath":"tp/php/tp1.1.md","filePath":"tp/php/tp1.1.md","lastUpdated":1640902682000}`),n={name:"tp/php/tp1.1.md"},t=i('<h1 id="le-generateur-de-bart" tabindex="-1">Le générateur de Bart <a class="header-anchor" href="#le-generateur-de-bart" aria-label="Permalink to &quot;Le générateur de Bart&quot;">​</a></h1><p>Le meilleur moyen de comprendre les boucles. C&#39;est d&#39;en écrire par soi-même. Je vous propose de créer votre propre générateur de Bart.</p><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><p>Nous allons mettre en application les boucles en PHP. Bon je ne vais pas vous demander de recopier 100× une phrase au tableau… Mais je vais demander à votre ordinateur de le faire avec une boucle <code>while</code> ou <code>for</code>.</p><p>Dans ce TP nous allons utiliser les boucles, mais surtout nous allons regarder comment le faire « pas trop salement »</p><h2 id="la-structure" tabindex="-1">La structure <a class="header-anchor" href="#la-structure" aria-label="Permalink to &quot;La structure&quot;">​</a></h2><p>Avant d&#39;attaquer le code, regardons un peu ce que je vous demande. Je vous propose de reproduire le résultat suivant :</p><p><img src="'+r+`" alt="Générateur de Bart" loading="lazy"></p><h3 id="definir-les-elements-necessaires" tabindex="-1">Définir les éléments nécessaires <a class="header-anchor" href="#definir-les-elements-necessaires" aria-label="Permalink to &quot;Définir les éléments nécessaires&quot;">​</a></h3><p>Malheureusement vous n&#39;avez pas au code. Mais seulement à une maquette du rendu final. Il faut donc interpréter, regarder, obtenir les éléments nécessaires à la réalisation de la page. Si on regarde il y a :</p><ul><li>Une image de Bart sur fond transparent (à chercher sur Internet)</li><li>Un fond vert avec une bordure de quelques pixels marron.</li><li>L&#39;image de bart semble être un <code>background-image</code> placé en CSS.</li><li>Le texte est assez gros avec une police personnalisée.</li><li>Le tableau semble être d&#39;une largeur fixe centré dans la page (<code>margin: auto</code>).</li></ul><h3 id="definir-la-structure-html-et-css" tabindex="-1">Définir la structure HTML et CSS <a class="header-anchor" href="#definir-la-structure-html-et-css" aria-label="Permalink to &quot;Définir la structure HTML et CSS&quot;">​</a></h3><p>Maintenant que nous avons défini les éléments nécessaires il faut déterminer la structure de la partie HTML + CSS, à première vue je dirais :</p><ul><li>Une page HTML non-responsive.</li><li>Une feuille de style.</li><li>Le « tableau de bart » sera très certainement une <code>&lt;div&gt;</code> avec dedans une boucle <code>while</code> ou <code>for</code> écrite en PHP.</li></ul><h3 id="definir-les-elements-du-code-php" tabindex="-1">Définir les éléments du code PHP <a class="header-anchor" href="#definir-les-elements-du-code-php" aria-label="Permalink to &quot;Définir les éléments du code PHP&quot;">​</a></h3><p>Notre code PHP sera certainement très simple. Je vois à première vue :</p><ul><li>Une variable <code>$nb_ligne</code> qui sera le nombre total de lignes à afficher.</li><li>Une variable <code>$phrase</code> qui est la phrase à afficher dans le « tableau ».</li><li>Une boucle <code>while</code> ou <code>for</code>.</li></ul><h2 id="realisation" tabindex="-1">Réalisation <a class="header-anchor" href="#realisation" aria-label="Permalink to &quot;Réalisation&quot;">​</a></h2><p>Voilà… Nous avons vu les éléments nécessaires… C&#39;est à vous. Je vous laisse réaliser la page en question</p><div class="tip custom-block"><p class="custom-block-title">N&#39;oubliez pas</p><p>Votre IDE vous aide. N&#39;oubliez pas de le configurer pour automatiser certaines de vos actions.</p></div><h2 id="evolution" tabindex="-1">Évolution <a class="header-anchor" href="#evolution" aria-label="Permalink to &quot;Évolution&quot;">​</a></h2><p>Passer en paramètre <code>GET</code> le nombre de ligne à écrire dans la page :</p><p><em>Exemple :</em></p><p>Pour la page avec un lien comme : <code>http://localhost/bart/index.php?nb=1000</code></p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$nombre </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $_GET[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;nb&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="danger custom-block"><p class="custom-block-title">Attention</p><p>Ne pas oublier de gérer le cas si pas de paramètre (avec un IF).</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$nombre </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($_GET[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;nb&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $nombre </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $_GET[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;nb&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></div><h2 id="la-suite" tabindex="-1">La suite <a class="header-anchor" href="#la-suite" aria-label="Permalink to &quot;La suite&quot;">​</a></h2><p>Nous reviendrons sur cette base de TP plus tard pour y ajouter :</p><ul><li>Une fonction.</li><li>Des includes.</li></ul>`,29),l=[t];function o(p,d,u,c,h,m){return s(),a("div",null,l)}const g=e(n,[["render",o]]);export{b as __pageData,g as default};
