import{_ as i}from"./chunks/parties.CYJkIHdB.js";import{_ as a,c as n,o as l,U as e,k as s}from"./chunks/framework.aGaNZw_P.js";const t="/assets/debug_bar.CUzqNZ-E.png",p="/assets/auth_breeze_setup.D1Fp3qYb.jpg",r="/assets/laravel_auth_breeze.CUhz2FkH.png",o="/assets/vite.EpvEczw9.jpg",h="/assets/breeze_create_account.d7yS6FDC.png",d="/assets/resultat-valentin.i4-lu3bJ.png",u="/assets/auth-logic.BuroL3p4.png",k="/assets/resultat-valentin-private.BCC-vbTh.png",c="/assets/navigation-links.CCRxzJ5J.png",z=JSON.parse(`{"title":"Laravel & l'authentification","description":"Nous avons vu dans le TP introduction qu'il était très simple de créer un petit site avec Laravel. L'autre problème que Laravel résout « simplement » c'est la partie authentification.","frontmatter":{"description":"Nous avons vu dans le TP introduction qu'il était très simple de créer un petit site avec Laravel. L'autre problème que Laravel résout « simplement » c'est la partie authentification."},"headers":[],"relativePath":"tp/laravel/authentification.md","filePath":"tp/laravel/authentification.md","lastUpdated":1704112852000}`),m={name:"tp/laravel/authentification.md"},g=e('<h1 id="laravel-l-authentification" tabindex="-1">Laravel &amp; l&#39;authentification <a class="header-anchor" href="#laravel-l-authentification" aria-label="Permalink to &quot;Laravel &amp; l&#39;authentification&quot;">​</a></h1><p>Nous avons vu dans <a href="./introduction.html">le TP introduction</a> qu&#39;il était très simple de créer un petit site avec Laravel. L&#39;autre problème que Laravel résout « simplement » c&#39;est la partie authentification.</p><p>La gestion des utilisateurs est en effet un élément complexe d&#39;une application entre :</p><ul><li>L&#39;authentification.</li><li>Limiter l&#39;accès à certaines ressources.</li><li>La sécurité des mots de passe.</li><li>La gestion du mot de passe oubliée.</li><li>…</li></ul><p>Vous l&#39;avez compris, la liste est longue… Vous pouvez évidemment tout coder vous-même! Mais nous allons le voir la force de Laravel c&#39;est également ça, intégrer l&#39;ensemble des briques pour une application qualitative dans les standards du marché.</p><details class="details custom-block"><summary>Sommaire</summary><nav class="table-of-contents"><ul><li><a href="#creer-votre-projet">Créer votre projet</a></li><li><a href="#installer-la-laravel-debug-bar">Installer la laravel debug bar</a></li><li><a href="#ajout-de-l-authentification">Ajout de l&#39;authentification</a><ul><li><a href="#ajout-de-la-dependance">Ajout de la dépendance</a></li><li><a href="#l-ui">L&#39;UI</a></li><li><a href="#tester-le-code">Tester le code</a></li></ul></li><li><a href="#les-«-composants-»-et-les-templates-blades">Les « Composants » et les templates blades</a><ul><li><a href="#migrer-la-page-«-»-vers-le-nouveau-systeme">Migrer la page « / » vers le nouveau système</a></li><li><a href="#fonctionnement-des-composants">Fonctionnement des composants</a></li></ul></li><li><a href="#proteger-une-page">Protéger une page</a><ul><li><a href="#la-partie-publique">La partie publique</a></li><li><a href="#la-partie-privee">La partie privée</a></li><li><a href="#le-controleur">Le contrôleur</a></li><li><a href="#la-route">La route</a></li></ul></li><li><a href="#conclusion">Conclusion</a></li><li><a href="#modifier-les-informations-demandees">Modifier les informations demandées</a></li><li><a href="#acceder-aux-informations-du-connecte">Accéder aux informations du connecté</a></li><li><a href="#changer-la-table-des-utilisateurs">Changer la table des utilisateurs</a><ul><li><a href="#la-migration">La migration</a></li><li><a href="#le-modele">Le modèle</a></li><li><a href="#le-fichier-de-configuration">Le fichier de configuration</a></li></ul></li><li><a href="#modifier-les-vues-et-les-controleurs">Modifier les vues et les contrôleurs</a><ul><li><a href="#le-controleur-d-authentification">Le contrôleur d&#39;authentification</a></li><li><a href="#et-le-formulaire-de-connexion">Et le formulaire de connexion ?</a></li><li><a href="#c-est-un-exemple">C&#39;est un exemple</a></li></ul></li><li><a href="#creer-plusieurs-enregistrements-en-base-de-donnees">Créer plusieurs enregistrements en base de données</a></li><li><a href="#afficher-les-informations-de-l-utilisateur">Afficher les informations de l&#39;utilisateur</a></li></ul></nav></details><h2 id="creer-votre-projet" tabindex="-1">Créer votre projet <a class="header-anchor" href="#creer-votre-projet" aria-label="Permalink to &quot;Créer votre projet&quot;">​</a></h2><p>Pour cette étape, je vous laisse suivre le début du <a href="./introduction.html">précédent TP</a>.</p><p><strong>Attention</strong> a bien installer au moins la version &gt;10 de Laravel.</p><h2 id="installer-la-laravel-debug-bar" tabindex="-1">Installer la laravel debug bar <a class="header-anchor" href="#installer-la-laravel-debug-bar" aria-label="Permalink to &quot;Installer la laravel debug bar&quot;">​</a></h2><p>Vous avez remarqué que les pages d&#39;erreurs de Laravel sont toujours pleines de bonnes informations. Avec Laravel nous pouvons avoir « encore mieux », vous avez à votre disposition une extension à Laravel qui vous permettra de voir :</p><ul><li>Le contenu de la session.</li><li>Les requêtes SQL réalisé par l&#39;ORM.</li><li>…</li></ul><p><img src="'+t+`" alt="Debug bar" loading="lazy"></p><p>Après installation cette barre va apparaître automatiquement en bas de votre site Laravel (évidemment uniquement le temps du développement). Pour l&#39;installer la commande est la suivante :</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">composer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> require</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> barryvdh/laravel-debugbar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>La Debugbar sera automatiquement active quand APP_DEBUG est à <code>true</code>.</p></div><p><a href="https://github.com/barryvdh/laravel-debugbar" target="_blank" rel="noreferrer">En savoir plus</a></p><h2 id="ajout-de-l-authentification" tabindex="-1">Ajout de l&#39;authentification <a class="header-anchor" href="#ajout-de-l-authentification" aria-label="Permalink to &quot;Ajout de l&#39;authentification&quot;">​</a></h2><p>Nous allons intégrer l&#39;authentification en utilisant <a href="https://laravel.com/docs/10.x/starter-kits#laravel-breeze" target="_blank" rel="noreferrer">Laravel Breeze</a> ce paquet <code>Composer</code> va ajouter l&#39;ensemble des :</p><ul><li>Routes</li><li>Contrôleur</li><li>Vue (templates blades)</li></ul><p>Permettant de gérer simplement l&#39;ensemble des problématiques.</p><div class="warning custom-block"><p class="custom-block-title">Nous avons plusieurs choix</p><p>Laravel Breeze n&#39;est pas la seule option, vous avez également : <a href="https://jetstream.laravel.com/introduction.html" target="_blank" rel="noreferrer">Laravel Jetstream</a> qui est plus complet, mais également plus complexe à mettre en place. Pour l&#39;instant nous allons nous concentrer sur Breeze, mais vous pouvez regarder Jetstream si vous le souhaitez (je vous conseille cependant de débuter avec Breeze, Jetstream est réellement plus complexe à mettre en place).</p></div><h3 id="ajout-de-la-dependance" tabindex="-1">Ajout de la dépendance <a class="header-anchor" href="#ajout-de-la-dependance" aria-label="Permalink to &quot;Ajout de la dépendance&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Un instant</p><p><strong>Attention</strong> pour que breeze s&#39;installe il vous faut NPM, vous devez avoir <code>NodeJS</code>. Si vous ne l&#39;avez pas, vous pouvez le télécharger <a href="https://nodejs.org/" target="_blank" rel="noreferrer">ici</a>.</p></div><p>L&#39;ajout de dépendances, pour cette étape aucun problème, il suffit d&#39;ajouter dans votre projet « breeze » dans le dossier de votre projet :</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">composer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> require</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> laravel/breeze</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Une fois ajoutée, nous allons devoir installer breeze pour que celui-ci active l&#39;ensemble des fonctionnalités :</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migrate</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> breeze:install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migrate</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>La commande <code>breeze:install</code> va vous poser quelques questions, voici les réponses que vous pouvez donner :</p><p><img src="`+p+'" alt="Laravel Breeze" loading="lazy"></p><div class="tip custom-block"><p class="custom-block-title">Vous avez vu ?</p><p>Nous venons d&#39;ajouter de nouvelles routes, celles-ci sont dans le dossier <code>route/auth.php</code> <strong>,mais ce n&#39;est pas tout</strong> vous avez également maintenant l&#39;ensemble des contrôleurs, mais également l&#39;ensemble des <code>Layout Blade</code> nécessaires à toute la partie authentification.</p><p>Pour le reste c&#39;est dans les dossiers que vous connaissez déjà.</p></div><p>Lors de cette phase d&#39;installation, Breeze va rajouter un ensemble de dépendances JavaScript (Vite, Alpine, Tailwind). Ne vous inquiétez pas, tout est déjà configuré, vous n&#39;avez rien à faire.</p><h3 id="l-ui" tabindex="-1">L&#39;UI <a class="header-anchor" href="#l-ui" aria-label="Permalink to &quot;L&#39;UI&quot;">​</a></h3><p>Si vous lancez dès maintenant votre projet via la commande <code>php artisan serve</code> vous allez voir que votre page d&#39;accueil intègre maintenant deux nouveaux liens :</p><p><img src="'+r+`" alt="Laravel Breeze" loading="lazy"></p><p>Vous pouvez cliquer dès à présent sur les différents liens, <strong>cependant</strong> les fichiers que vous avez ajoutés avec Breeze reposent sur un « framework UI » autre que Bootstrap celui-ci se nomme <a href="https://tailwindcss.com/" target="_blank" rel="noreferrer">Tailwind</a> l&#39;approche de Laravel est moderne et Tailwind repose sur un concept similaire à Bootstrap, mais en ce focalisant plus sur un système de classes <code>css</code> que l&#39;on va appeler « utilitaire ».</p><p>Nous allons donc avoir besoin de <code>node</code>, mais surtout de <code>npm</code> pour compiler l&#39;ensemble des ressources nécessaires au bon fonctionnement de l&#39;interface ajouté. Si vous avez déjà pratiqué <code>node</code> et <code>npm</code> vous savez peut-être que ces outils sont plus utilisés dans le monde du JavaScript que du PHP ; rien d&#39;étonnant dans notre cas, nous allons utilisé <code>npm</code> pour ajouter l&#39;ensemble des dépendances UI de notre projet, mais également les « compiler » / « packager » dans un gros fichier CSS et JS pour nos clients.</p><div class="tip custom-block"><p class="custom-block-title">✋ Un instant !</p><p>Notre projet va contenir seulement Tailwind après installation, si vous souhaitez avoir également Bootstrap vous avez deux options :</p><ul><li>Ajouter les librairies Bootstrap via le CDN de votre choix.</li><li>Ajouter Bootstrap dans les dépendances npm de votre projet. (à faire via le <code>package.json</code> et <code>webpack.mix.js</code>, attention c&#39;est plus complexe)</li></ul></div><p>Pour installer puis « compiler » vos ressources, il va falloir entrer les commandes suivantes dans le dossier de votre projet :</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Lancer la compilation des ressources</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Ou si vous souhaitez que les ressources soient recompilées à chaque modification</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>Si vous lancez la commande <code>npm run build</code>, votre projet sera compilé une seule fois. C&#39;est intéressant pour la mise en production, mais pas pour le développement. Si vous souhaitez que vos ressources soient recompilées à chaque modification, vous pouvez lancer la commande <code>npm run dev</code> en arrière-plan. Celle-ci va surveiller les modifications de vos fichiers et recompiler vos ressources à chaque modification.</p><p>Une fois le processus terminé, vous devriez avoir un résultat comme celui-ci :</p><p><img src="`+o+'" alt="Vite build" loading="lazy"></p><p>Vos pages d&#39;authentification sont maintenant fonctionnelles, votre site intègre maintenant toute la mécanique permettant de gérer cette problématique.</p><p>Exemple :</p><p><img src="'+h+'" alt="Laravel Breeze Create Account" loading="lazy"></p><div class="tip custom-block"><p class="custom-block-title">Petit point important</p><p>Laravel Breeze est intéressant, car il ne cache pas le code <strong>l&#39;ensemble des éléments sont accessibles</strong> vous pouvez modifier le code fourni aucun problème ! C&#39;est d&#39;ailleurs ce que nous allons faire.</p></div><div class="danger custom-block"><p class="custom-block-title">npm run build ?</p><p>La commande <code>npm run build</code> va compiler vos ressources afin de le figer dans le temps après des modifications. Pendant la phase de développement vous serez amené à de plusieurs reprises à lancer cette commande pour mettre à jours vous ressources.</p><p>Si vous souhaitez le faire de manière « automatique », vous pouvez lancer en arrière-plan <code>npm run dev</code> (en local uniquement évidemment), afin de surveiller le code client (CSS, JS) pour mettre à jour vos ressources.</p></div><h3 id="tester-le-code" tabindex="-1">Tester le code <a class="header-anchor" href="#tester-le-code" aria-label="Permalink to &quot;Tester le code&quot;">​</a></h3><p>Vous avez normalement tout suivi, votre site est donc fonctionnel ! Avant d&#39;aller plus loin, je vous laisse tester l&#39;ensemble de votre site.</p><ul><li>Home.</li><li>Création de comptes.</li><li>Connexion.</li></ul><div class="tip custom-block"><p class="custom-block-title">Avant d&#39;aller plus loin</p><p>Regarder également les templates, les règles de validation de saisie présente dans les contrôleurs, bref tout ce que vous avez pu installer de manière automatique !</p></div>',52),E=s("div",{style:{width:"100%",height:"0","padding-bottom":"56%",position:"relative"}},[s("iframe",{src:"https://giphy.com/embed/YWy93Zf9eW8RMlK0gK",width:"100%",height:"100%",style:{position:"absolute"},frameBorder:"0",class:"giphy-embed",allowFullScreen:""})],-1),b=e('<h2 id="les-«-composants-»-et-les-templates-blades" tabindex="-1">Les « Composants » et les templates blades <a class="header-anchor" href="#les-«-composants-»-et-les-templates-blades" aria-label="Permalink to &quot;Les « Composants » et les templates blades&quot;">​</a></h2><p>Si vous avez regardé l&#39;ensemble du code, vous noterez une syntaxe un peu particulière dans les templates Blades ; celle-ci vous permet de créer des composants, mais également des templates de base (ce sont les <code>x-</code> quelque chose dans le code blade).</p><p>Tout est déjà configuré, vous pouvez dès à présent l&#39;utiliser, mais également créer de nouveau composant en ajoutant les fichiers <code>blade</code> dans <code>views/components/</code></p><p><a href="https://laravel.com/docs/8.x/blade#rendering-components" target="_blank" rel="noreferrer">Pour plus d&#39;information, rendez-vous ici</a></p><div class="tip custom-block"><p class="custom-block-title">Nous avons vu la dernière fois, l&#39;héritage</p><p>Nous avions vu la dernière fois <a href="https://laravel.com/docs/8.x/blade#layouts-using-template-inheritance" target="_blank" rel="noreferrer">l&#39;héritage de template</a> et bien la c&#39;est là mêmes choses, mais via un système de « composant » très à la mode en ce moment.</p></div><p>👋 Regardons ensemble comment ça fonctionne ! (vous pouvez m&#39;appeler)</p><details class="details custom-block"><summary>Pour résumer</summary><p>Le système de composant va vous permettre :</p><ul><li>De rendre générique un morceau de code que vous utilisez plusieurs fois dans votre projet.</li><li>Penser composant plutôt que HTML copié depuis Internet.</li><li>Rendre « générique les layouts » pour les partager entre les pages.</li></ul></details><h3 id="migrer-la-page-«-»-vers-le-nouveau-systeme" tabindex="-1">Migrer la page « / » vers le nouveau système <a class="header-anchor" href="#migrer-la-page-«-»-vers-le-nouveau-systeme" aria-label="Permalink to &quot;Migrer la page « / » vers le nouveau système&quot;">​</a></h3><p>Le nouveau système de template est très très sympa, il permet de découper son travail pour sortir les parties génériques dans un « layouts » partageables entre toutes vos pages. Par exemple :</p><p><img src="'+i+`" alt="Différentes parties" loading="lazy"></p><div class="tip custom-block"><p class="custom-block-title">Hey toi lecteur ! Stop !</p><p>L&#39;organisation est tout aussi importante que le code, tu peux copier-coller du code entre tous les templates oui… Mais sache que c&#39;est pas efficace, que tu perds du temps et que si on te demande une modification <strong>tu perdras du temps</strong> !</p><p>Prendre du temps pour utiliser le système de layout tels proposé par Laravel est un vrai gain de temps ! Le toi du futur te remercie d&#39;avance.</p><p>Promis, ça va bien se passer !</p></div><p>Avec le Scaffolding de Breeze nous avons à notre disposition <strong>deux templates</strong> :</p><ul><li><code>app.blade.php</code> pour les clients <strong>connectés</strong>. Accessible dans votre template via <code>&lt;x-app-layout&gt;</code></li><li><code>guest.blade.php</code> pour les clients <strong>non connectés</strong>. Accessible dans votre template via <code>&lt;x-guest-layout&gt;</code></li></ul><p>Nous allons donc migrer notre page d&#39;accueil pour utiliser le nouveau système de composant. Pour ça rien de plus simple, il nous suffit d&#39;utiliser <code>&lt;x-guest-layout&gt;</code> dans le template <code>welcome.blade.php</code>, je vous laisse le faire celui-ci va remplacer l&#39;ensemble du haut de notre html jusqu&#39;au <code>&lt;body&gt;</code> ce qui va donner :</p><div class="tip custom-block"><p class="custom-block-title">Un instant 👋</p><p>Les composants sont une alternative à l&#39;héritage des templates, ici nous allons réaliser l&#39;équivalent du <code>@extends</code> du précédent TP. Je vous laisse choisir la version que vous préférez. Personnellement, j&#39;aime bien l&#39;approche composant bien plus moderne et lisible.</p></div><p>Nous allons donc modifier <code>welcome.blade.php</code>, pour utiliser le composant <code>&lt;x-guest-layout&gt;</code> :</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">x-guest-layout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @if (Route::has(&#39;login&#39;))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hidden fixed top-0 right-0 px-6 py-4 sm:block&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        @auth</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{{ url(&#39;/dashboard&#39;) }}&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text-sm text-gray-700 underline&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Dashboard&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          @else</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{{ route(&#39;login&#39;) }}&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text-sm text-gray-700 underline&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Log in&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          @if (Route::has(&#39;register&#39;))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{{ route(&#39;register&#39;) }}&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ml-4 text-sm text-gray-700 underline&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Register&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          @endif </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        @endauth</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @endif</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Bienvenue sur mon site !</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">x-guest-layout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>⚠️ Je vous laisse constater la différence.</p><div class="danger custom-block"><p class="custom-block-title">À partir de maintenant</p><p>J&#39;espère qu&#39;à partir de maintenant, vous allez utiliser le système de template ! Je vous encourage vivement à le faire.</p></div><h3 id="fonctionnement-des-composants" tabindex="-1">Fonctionnement des composants <a class="header-anchor" href="#fonctionnement-des-composants" aria-label="Permalink to &quot;Fonctionnement des composants&quot;">​</a></h3><p>Vous avez utilisé les composants, mais avez-vous compris le fonctionnement ? Un composant, c&#39;est quelque chose de très simple. Il s&#39;agit d&#39;un morceau de vue réutilisable (un bouton, une card, etc.), il s&#39;agit donc de « code HTML ». Si vous voulez une comparaison, nous pourrions comparer cela à une sorte de fonction. Prenons un exemple.</p><p>Si nous souhaitons faire une <code>Card</code>. Notre composant pourrait ressembler à, vous pouvez mettre ce code dans <code>resources/views/components/card.blade.php</code> :</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;min-h-screen flex flex-col sm:justify-center items-center pt-6 sm:pt-0 bg-gray-100&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;w-full sm:max-w-md mt-6 px-6 py-4 bg-white shadow-md overflow-hidden sm:rounded-lg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {{ $slot }}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>L&#39;important dans le code ici est <span><code>{{ $slot }}</code></span>. <code>$slot</code> est une variable qui va contenir les éléments à l&#39;intérieure de votre Card lors de son usage. Par exemple :</p><p>Puis dans votre <code>welcome.blade.php</code>, vous pouvez utiliser votre composant comme ceci :</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">x-card</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Ceci est une démo</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">x-card</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Dans ce cas, la variable <code>$slot</code> contiendra… <code>Ceci est une démo</code>. Vous venez en quelque sorte de créer votre propre élément HTML réutilisable comme une <code>div</code> un <code>span</code> ou un <code>li</code>, mais ici cet élément est plus complet il peut contenir, du style, un comportement, des données par défaut.</p><p>Je vous laisse parcourir les composants déjà disponibles dans le dossier <code>components</code>.</p><h2 id="proteger-une-page" tabindex="-1">Protéger une page <a class="header-anchor" href="#proteger-une-page" aria-label="Permalink to &quot;Protéger une page&quot;">​</a></h2><p>Le but de l&#39;authentification est donc de limiter l&#39;accès à certaines pages vous l&#39;avez bien compris… Sauf que pour l&#39;instant nous n&#39;avons pas encore vu comment le faire sur les pages que nous souhaitons protéger !</p><p>Nous allons créer un contrôleur fictif, celui-ci vous nous permettre de tester la protection.</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> make:controller</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> YoloControler</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Vous venez de créer un contrôleur vide. En reprenant si nécessaire les exemples du premier TP, je vous laisse créer dedans :</p><table><thead><tr><th style="text-align:left;">Route</th><th style="text-align:left;">Méthode</th></tr></thead><tbody><tr><td style="text-align:left;"><code>/yolo</code></td><td style="text-align:left;"><code>publicView()</code></td></tr><tr><td style="text-align:left;"><code>/yolo-connected</code></td><td style="text-align:left;"><code>privateView()</code></td></tr></tbody></table><h3 id="la-partie-publique" tabindex="-1">La partie publique <a class="header-anchor" href="#la-partie-publique" aria-label="Permalink to &quot;La partie publique&quot;">​</a></h3><p>Pour la partie publique (non connecté), pas rapport à précédemment :</p><ul><li>Une méthode <code>publicView</code>, celle-ci doit retourner une <code>view</code> qui affichera pour l&#39;instant <code>Bonjour non connecté</code>. Attention ! Cette vue doit utiliser le template <code>&lt;x-guest-layout&gt;</code></li><li>Ajouter cette route dans le fichier <code>routes/web.php</code>.</li></ul><details class="details custom-block"><summary>Besoin d&#39;aide ?</summary><p>Avez-vous bien cherché ?</p><p>Je vous aide pour la partie route :</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Route</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/yolo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;App\\Http\\Controllers\\YoloControler&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;publicView&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Je vous aide pour la partie méthode :</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;yolo.publicView&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></details><p>Nous avons le temps, n&#39;hésitez pas à :</p><ul><li>Créer des composants si nécessaire.</li><li>Utiliser les class de Tailwind (vous avez même de la complétion dans PhpStorm).</li></ul><p>Pour ma part voilà mon rendu :</p><p><img src="`+d+`" alt="Résultat Valentin" loading="lazy"></p><details class="details custom-block"><summary>Vous voulez-voir mon template ?</summary><p>Est-ce vraiment une bonne idée ? Je vous encourage vraiment à faire le vôtre, d&#39;autant plus que j&#39;ai décidé de créer un composant nommé <code>card.blade.php</code> dans la partie composant. Mais voilà mon code :</p><p><em>resources/views/yolo/publicView.blade.php:</em></p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">x-guest-layout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">x-card</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text-center font-bold text-indigo-600&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Bonjour Mr Anonyme 👋&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">x-card</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">x-guest-layout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></details><p>Je vous laisse coder <strong>votre version</strong>.</p><h3 id="la-partie-privee" tabindex="-1">La partie privée <a class="header-anchor" href="#la-partie-privee" aria-label="Permalink to &quot;La partie privée&quot;">​</a></h3><p>Pour la partie privée, je vous laisse gérer l&#39;ensemble de la base :</p><ul><li>Création de la méthode.</li><li>Création du template. Attention cette fois-ci nous allons utiliser le composant <code>&lt;x-app-layout&gt;</code> qui contient toute la logique de la partie « information de connexion » (menu, etc.).</li></ul><h4 id="le-layout" tabindex="-1">Le Layout <a class="header-anchor" href="#le-layout" aria-label="Permalink to &quot;Le Layout&quot;">​</a></h4><p>Pour le layout j&#39;ai décidé de le nommer <code>privateView.blade.php</code> et de le mettre ici : <code>resources/views/yolo/privateView.blade.php</code></p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">x-app-layout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">x-slot</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;header&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;font-semibold text-xl text-gray-800 leading-tight&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Hello&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">x-slot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;p-5&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text-center font-bold text-indigo-600&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      Bonjour {{Auth::user()-&gt;name}} 👋</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">x-app-layout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="le-controleur" tabindex="-1">Le contrôleur <a class="header-anchor" href="#le-controleur" aria-label="Permalink to &quot;Le contrôleur&quot;">​</a></h3><p>Pour le contrôleur, je vous laisse ajouter la méthode <code>privateView</code> comme demandé dans le tableau plus haut :</p><details class="details custom-block"><summary>Dans mon cas ça donne</summary><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> privateView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;yolo.privateView&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></details><h3 id="la-route" tabindex="-1">La route <a class="header-anchor" href="#la-route" aria-label="Permalink to &quot;La route&quot;">​</a></h3><p>C&#39;est la partie qui nous intéresse… Vous avez remarqué que dans les lignes précédentes, nous n&#39;avons jamais parlé de l&#39;authentification. Comment alors est-ce possible que la page ne soit accessible qu&#39;aux gens connectés ?</p><p>Et bien … C&#39;est simple ! Quand vous avez installé <code>breeze</code> vous avez également ajouté des <code>Middleware</code>, un middleware est un morceau de code qui va intercepter la demande initiale pour faire des contrôles supplémentaires. Dans notre cas le contrôle en plus va être « Est-ce que l&#39;utilisateur est connecté » :</p><p><img src="`+u+'" alt="Logique d&#39;authentification" loading="lazy"></p><p>Nous allons donc ajouter dans le fichier <code>routes/web.php</code></p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Route</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/yolo-connected&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;App\\Http\\Controllers\\YoloControler&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;privateView&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">middleware</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;auth&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;yoloPrivate&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Ici la protection est ajoutée grâce à la méthode <code>middleware([&#39;auth&#39;])</code>. Elle va permettre de ne laisser passer que les utilisateurs connectés.</p><div class="tip custom-block"><p class="custom-block-title">Middleware</p><p>Pour rappel, le middleware <code>auth</code> est celui qui va vérifier si l&#39;utilisateur est connecté ou non. Si ce n&#39;est pas le cas, il va rediriger l&#39;utilisateur vers la page de connexion.</p><p>Un Middleware est un morceau de code qui va être exécuté avant le contrôleur. Il peut être utilisé pour faire des contrôles supplémentaires, ou pour modifier la demande initiale.</p></div><p>Voilà le résultat pour moi</p><p><img src="'+k+'" alt="Résultat Valentin partie privée" loading="lazy"></p><p>⚠️ Je vous laisse implémenter la partie privée dans votre code. ⚠️</p><div class="danger custom-block"><p class="custom-block-title">Un instant !</p><p>Vous noterez que dans ma version j&#39;ai un menu avec un lien vers ma page… Pas de magie ! J&#39;ai ajouté le code nécessaire dans le fichier <code>resources/views/layouts/navigation.blade.php</code></p><p>Dans la partie « Navigation Link » :</p><p><img src="'+c+`" alt="Navigation Links" loading="lazy"></p></div><h2 id="conclusion" tabindex="-1">Conclusion <a class="header-anchor" href="#conclusion" aria-label="Permalink to &quot;Conclusion&quot;">​</a></h2><p>Nous avons fait le tour de la base de ce qu&#39;il faut savoir. Cependant le TP continue sur deux éléments qui peuvent être intéressants pour vous à la suite de cette conclusion.</p><div class="tip custom-block"><p class="custom-block-title">Le code entier, mais uniquement si vous le demandez</p><p>Vous souhaitez voir mon code ? <a href="https://github.com/c4software/laravel-auth-student" target="_blank" rel="noreferrer">J&#39;ai un repository privé si nécessaire</a></p></div><h2 id="modifier-les-informations-demandees" tabindex="-1">Modifier les informations demandées <a class="header-anchor" href="#modifier-les-informations-demandees" aria-label="Permalink to &quot;Modifier les informations demandées&quot;">​</a></h2><p>En reprenant ce que nous avons fait précédemment, je vous laisse modifier la structure de la base de données pour ajouter dans la table <code>users</code> un nouveau champ nommé par exemple <code>pseudo</code>.</p><ul><li>Ajouter la colonne en base</li><li>Modifier le formulaire de création de comptes <code>resources/views/auth/register.blade.php</code> pour ajouter le champ dans le formulaire.</li><li>Modifier le modèle <code>app/Models/User.php</code> pour ajouter dans les <code>$fillable</code> le nouveau champ.</li><li>Modifier le contrôleur pour sauvegarder la nouvelle valeur. (méthode <code>store</code> dans <code>app/Http/Controllers/Auth/RegisteredUserController.php</code>)</li></ul><h2 id="acceder-aux-informations-du-connecte" tabindex="-1">Accéder aux informations du connecté <a class="header-anchor" href="#acceder-aux-informations-du-connecte" aria-label="Permalink to &quot;Accéder aux informations du connecté&quot;">​</a></h2><p>Nous l&#39;avons fait dans notre exemple de contrôleur, mais, si vous ne l&#39;aviez pas compris :</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{Auth::user()-&gt;name}}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="changer-la-table-des-utilisateurs" tabindex="-1">Changer la table des utilisateurs <a class="header-anchor" href="#changer-la-table-des-utilisateurs" aria-label="Permalink to &quot;Changer la table des utilisateurs&quot;">​</a></h2><p>Le fonctionnement par défaut (avec la table <code>users</code>) est très bien, mais il est possible que vous souhaitiez utiliser une autre table pour stocker les informations des utilisateurs. Par exemple, si vous avez déjà un projet et que vous souhaitez utiliser Breeze pour gérer l&#39;authentification.</p><p>Si nous souhaitons utiliser la table <code>clients</code> à la place de <code>users</code> pour stocker les informations des utilisateurs, nous devons modifier plusieurs éléments :</p><ul><li>Créer la migration ainsi que le modèle : <code>php artisan make:model Client -m</code></li></ul><h3 id="la-migration" tabindex="-1">La migration <a class="header-anchor" href="#la-migration" aria-label="Permalink to &quot;La migration&quot;">​</a></h3><p>Nous allons créer une migration pour ajouter les champs nécessaires à la table <code>clients</code> :</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Schema</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;clients&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Blueprint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $table) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $table</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $table</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;nom&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $table</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;email&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unique</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $table</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;mot_de_passe&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $table</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rememberToken</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $table</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timestamps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">Lancer la migration</p><p>Maintenant que la migration est créée, il faut lancer la commande <code>php artisan migrate</code> pour créer la table dans la base de données.</p></div><h3 id="le-modele" tabindex="-1">Le modèle <a class="header-anchor" href="#le-modele" aria-label="Permalink to &quot;Le modèle&quot;">​</a></h3><p>Nous allons ensuite modifier le modèle <code>app/Models/Client.php</code> pour ajouter les champs <code>$fillable</code> et réaliser l&#39;héritage avec <code>Authenticatable</code> :</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">php</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> App\\Models</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Illuminate\\Contracts\\Auth\\MustVerifyEmail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Illuminate\\Database\\Eloquent\\Factories\\HasFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Illuminate\\Foundation\\Auth\\User</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Authenticatable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Illuminate\\Notifications\\Notifiable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Client</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Authenticatable</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> HasFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Notifiable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    protected</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $fillable </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;nom&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;email&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;mot_de_passe&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    protected</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $hidden </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;mot_de_passe&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;remember_token&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * Retourne le mot de passe de l&#39;utilisateur</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getAuthPassword</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> $this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mot_de_passe;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * Retourne l&#39;identifiant de l&#39;utilisateur</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getAuthIdentifier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> $this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">email;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * Retourne le nom de l&#39;identifiant de l&#39;utilisateur</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getAuthIdentifierName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;email&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">Pourquoi l&#39;héritage avec <code>Authenticatable</code> ?</p><p>Ceca va permetre à Laravel de savoir comment gérer l&#39;authentification avec cette classe.</p></div><div class="danger custom-block"><p class="custom-block-title">Attention !</p><p>Pour que ça fonctionne, nous devons overrider les méthodes <code>getAuthPassword</code>, <code>getAuthIdentifier</code> et <code>getAuthIdentifierName</code> pour que Laravel puisse récupérer les informations nécessaires lors de l&#39;authentification.</p><p>Ces trois méthodes seront appelées automatiquement par Laravel lors de l&#39;authentification d&#39;un utilisateur (utilisé via <code>Auth::attempt</code>).</p></div><h3 id="le-fichier-de-configuration" tabindex="-1">Le fichier de configuration <a class="header-anchor" href="#le-fichier-de-configuration" aria-label="Permalink to &quot;Le fichier de configuration&quot;">​</a></h3><p>Par défaut, Breeze utilise la table <code>users</code> pour stocker les informations des utilisateurs. Vous pouvez la changer en modifiant le fichier <code>config/auth.php</code> en <strong>modifiant</strong> :</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;providers&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;users&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;driver&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;eloquent&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;model&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> App\\Models\\Client</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="modifier-les-vues-et-les-controleurs" tabindex="-1">Modifier les vues et les contrôleurs <a class="header-anchor" href="#modifier-les-vues-et-les-controleurs" aria-label="Permalink to &quot;Modifier les vues et les contrôleurs&quot;">​</a></h2><p>Maintenant que nous avons modifié la table utilisée pour stocker les informations des utilisateurs, nous devons modifier les vues pour qu&#39;elles utilisent les bonnes informations.</p><h3 id="le-controleur-d-authentification" tabindex="-1">Le contrôleur d&#39;authentification <a class="header-anchor" href="#le-controleur-d-authentification" aria-label="Permalink to &quot;Le contrôleur d&#39;authentification&quot;">​</a></h3><p>Nous allons modifier le contrôleur <code>app/Http/Controllers/Auth/RegisteredUserController.php</code> pour qu&#39;il utilise le bon modèle. Nous allons modifier la méthode <code>store</code>. Cette méthode est appelée lors de la création d&#39;un compte.</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> store</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $request)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RedirectResponse</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $request</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">validate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;name&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;required&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;string&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;max:255&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;email&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;required&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;string&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;email&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;max:255&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;unique:&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Client</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;password&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;required&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;confirmed&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Rules\\Password</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">defaults</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Client</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;nom&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $request</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;email&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $request</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">email,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;mot_de_passe&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Hash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($request</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">password),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Registered</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($user));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    Auth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">login</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($user);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> redirect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RouteServiceProvider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">HOME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>Ici nous avons créé un utilisateur en utilisant le modèle <code>Client</code> et non plus <code>User</code>. C&#39;est dans cette méthode que vous pouvez ajouter des informations supplémentaires dans la table <code>clients</code>, ou dans une autre table si c&#39;est nécessaire.</p><h3 id="et-le-formulaire-de-connexion" tabindex="-1">Et le formulaire de connexion ? <a class="header-anchor" href="#et-le-formulaire-de-connexion" aria-label="Permalink to &quot;Et le formulaire de connexion ?&quot;">​</a></h3><p>Nous n&#39;avons pas besoin de modifier le formulaire de connexion, car nous avons déjà modifié le fichier de configuration <code>config/auth.php</code> pour que Laravel utilise le bon modèle. Grâce à cette modification, Laravel va automatiquement utiliser le bon modèle pour authentifier l&#39;utilisateur, du moment que vous lui fournissez les deux champs <code>email</code> et <code>password</code> (dans le formulaire de connexion).</p><h3 id="c-est-un-exemple" tabindex="-1">C&#39;est un exemple <a class="header-anchor" href="#c-est-un-exemple" aria-label="Permalink to &quot;C&#39;est un exemple&quot;">​</a></h3><p>Évidemment, ce n&#39;est qu&#39;un exemple pour vous montrer comment modifier Breeze pour qu&#39;il s&#39;adapter à vos besoins. Pour l&#39;utiliser dans vos projets, d&#39;autres éléments seront certainement à modifier :</p><ul><li>La vue de création de compte pour y ajouter des champs supplémentaires.</li><li>Le modèle <code>Client</code> pour correspondre à vos besoins.</li><li>Le design des vues pour qu&#39;elles correspondent à votre charte graphique.</li></ul><h2 id="creer-plusieurs-enregistrements-en-base-de-donnees" tabindex="-1">Créer plusieurs enregistrements en base de données <a class="header-anchor" href="#creer-plusieurs-enregistrements-en-base-de-donnees" aria-label="Permalink to &quot;Créer plusieurs enregistrements en base de données&quot;">​</a></h2><p>Le but de Breeze est de vous permettre de modifier le code « préfourni » c&#39;est ce que l&#39;on appelle du Scaffolding, nous allons donc en profiter pour modifier son comportement afin de créer lors de l&#39;ajout d&#39;utilisateur une autre entrée en base de données, par exemple une <code>personne</code>.</p><ul><li>Créer la migration ainsi que le modèle. <code>php artisan make:model Personne --migration</code></li><li>Renseigner les champs dans votre migration <strong>,mais également</strong> dans le modèle.</li><li>Lancer la migration <code>php artisan migrate</code></li><li>Modifier le code de la méthode <code>store</code> dans le contrôleur <code>app/Http/Controllers/Auth/RegisteredUserController.php</code> pour ajouter également un utilisateur :</li></ul><p>Exemple dans mon cas :</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Personne</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;name&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $request</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;userId&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $user</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">id</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Et voilà nous avons maintenant une méthode de « Création d&#39;un utilisateur » qui ajoute également une personne.</p><div class="tip custom-block"><p class="custom-block-title">C&#39;est bien évidement un exemple</p><p>Je vous laisse l&#39;implémenter… Cependant vous comprenez bien que c&#39;est évidemment un exemple !</p></div><p>Je vous laisse implémenter la modification dans votre code.</p><h2 id="afficher-les-informations-de-l-utilisateur" tabindex="-1">Afficher les informations de l&#39;utilisateur <a class="header-anchor" href="#afficher-les-informations-de-l-utilisateur" aria-label="Permalink to &quot;Afficher les informations de l&#39;utilisateur&quot;">​</a></h2><p>Maintenant que nous avons créé une personne lors de la création d&#39;un utilisateur, nous allons afficher ces données dans la page d&#39;accueil après la connexion.</p><ul><li>Modifier la vue <code>resources/views/dashboard.blade.php</code> pour afficher les informations de la personne connectée.</li><li>Modifier le contrôleur <code>app/Http/Controllers/DashboardController.php</code> pour récupérer les informations de la personne connectée.</li></ul><div class="tip custom-block"><p class="custom-block-title">Vous avez besoin d&#39;aide ?</p><p>Je vous aide pour le contrôleur :</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $personne </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Personne</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;userId&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Auth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">id)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">first</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;dashboard&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;personne&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $personne]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div><p>C&#39;est à vous de jouer pour la vue !</p>`,114),v=[g,E,b];function y(F,f,C,q,A,B){return l(),n("div",null,v)}const L=a(m,[["render",y]]);export{z as __pageData,L as default};
