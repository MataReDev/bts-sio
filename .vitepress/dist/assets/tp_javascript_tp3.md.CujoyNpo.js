import{_ as s,c as i,o as a,U as e}from"./chunks/framework.aGaNZw_P.js";const n="/assets/bart-form.D6YAIvBP.png",E=JSON.parse(`{"title":"Contrôle de saisie & intéractivité","description":"Le JavaScript, comme je l'indiquai en introduction, est partout. Pour l'instant, nous allons le limiter principalement aux interactions utilisateurs (contrôle de saisie, validation de formulaire, interactivité).","frontmatter":{"description":"Le JavaScript, comme je l'indiquai en introduction, est partout. Pour l'instant, nous allons le limiter principalement aux interactions utilisateurs (contrôle de saisie, validation de formulaire, interactivité)."},"headers":[],"relativePath":"tp/javascript/tp3.md","filePath":"tp/javascript/tp3.md","lastUpdated":1640899309000}`),l={name:"tp/javascript/tp3.md"},t=e('<h1 id="controle-de-saisie-interactivite" tabindex="-1">Contrôle de saisie &amp; intéractivité <a class="header-anchor" href="#controle-de-saisie-interactivite" aria-label="Permalink to &quot;Contrôle de saisie &amp; intéractivité&quot;">​</a></h1><p>Le JavaScript, comme je l&#39;indiquai en introduction, est partout. Pour l&#39;instant, nous allons le limiter principalement aux interactions utilisateurs (contrôle de saisie, validation de formulaire, interactivité).</p><p>Nous allons pratiquer les évènements JavaScript en ajoutant à notre TP Bart (<a href="/tp/php/tp2.html">Version JavaScript</a>) un simple formulaire puis des contrôles de saisie.</p><p>L&#39;objectif étant donc d&#39;ajouter des contrôles de saisie sur votre page formulaire.</p><p>Deux solutions sont possibles coder nous même, ou faire confiance à une librairie « provenant d&#39;Internet ».</p><h2 id="ajouter-le-formulaire-sur-votre-page" tabindex="-1">Ajouter le formulaire sur votre page <a class="header-anchor" href="#ajouter-le-formulaire-sur-votre-page" aria-label="Permalink to &quot;Ajouter le formulaire sur votre page&quot;">​</a></h2><p>La première étape vas être d&#39;ajouter dans la page un formulaire HTML doit ressembler à :</p><p><img src="'+n+`" alt="Formulaire BART" loading="lazy"></p><p>Je vais laisse écrire le code <em>et le style</em> du formulaire en question. Quelques règles :</p><ul><li>Vous pouvez ajouter bootstrap si vous souhaitez.</li><li>Vous devez utiliser un « form »</li><li>Vous devez externaliser la CSS.</li><li>Votre formulaire doit être avant le tableau.</li></ul><h2 id="la-validation-sans-librairie" tabindex="-1">La validation sans Librairie <a class="header-anchor" href="#la-validation-sans-librairie" aria-label="Permalink to &quot;La validation sans Librairie&quot;">​</a></h2><p>Ajouter des contrôles, finalement c&#39;est simple. Il « faut juste » :</p><ul><li>Ajouter un évènement « onSubmit ».</li><li>Vérifier que les champs <code>input</code> ne sont pas vide (ou du moins, possède les valeurs attendues).</li></ul><p>En pratique ça va donner :</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> validateForm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">evt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).value;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> password</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;password&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).value;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    alert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Name can&#39;t be blank&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    evt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">preventDefault</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (password.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    alert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Password must be at least 6 characters long.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    evt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">preventDefault</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Cas de réussite</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Empêche le submit du formulaire</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  evt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">preventDefault</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Attacher l&#39;évènement en JS</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;monForm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;submit&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, validateForm, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Vous pouvez également attacher l&#39;événement directement dans le HTML avec</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &lt;form onsubmit=&quot;validateForm(this)&quot;&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// …</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">Un Instant !</p><p><code>return false</code> ? Et oui, c&#39;est aussi simple que ça ! En JS si vous souhaitez stopper la soumissions d&#39;un formulaire il suffit que votre fonction de validation retourne <code>false</code>. Votre navigateur sera automatiquement qu&#39;il doit arrêter imédiatement la soumission du formulaire. Votre <em>serveur ne recevra donc <strong>pas</strong></em> les données.</p></div><h3 id="a-faire" tabindex="-1">À faire <a class="header-anchor" href="#a-faire" aria-label="Permalink to &quot;À faire&quot;">​</a></h3><ul><li>Je vous laisse le mettre en place dans votre code.</li><li>Rendre la page interactive avec les données saisies (via un <code>onsubmit</code> en HTML ou, <code>submit</code> via les events)</li><li>Je vous laisse écrire la même chose avec jQuery.</li></ul><h2 id="faire-l-action-souhaitee" tabindex="-1">Faire l&#39;action souhaitée <a class="header-anchor" href="#faire-l-action-souhaitee" aria-label="Permalink to &quot;Faire l&#39;action souhaitée&quot;">​</a></h2><p>Maintenant que nos informations sont validées, il faut les utiliser dans la page. En reprenant <a href="./tp2.html">le code du TP précédent</a>, je vous laisse intégrer la logique suivante :</p><ul><li>Le tableau ne doit pas être visible au chargement de la page.</li><li>Une fois, la validation du formulaire effective (saisie correcte), le tableau doit s&#39;afficher avec dedans la phrase choisie par l&#39;utilisateur (ainsi que le nombre).</li><li>Le formulaire ne doit plus être visible (ainsi que la <code>card</code> dans lequel celui-ci est).</li><li>« Une action » recommencer la saisie doit permettre de : <ul><li>Masquer le tableau</li><li>Afficher le formulaire à nouveau</li></ul></li></ul><div class="tip custom-block"><p class="custom-block-title">Rappels</p><p>Je vous rappels que vous avez <a href="/cheatsheets/javascript/">l&#39;aide mémoire</a> ainsi que le <a href="/tp/javascript/support.html">support du cours</a> pour vous aider. Mais l&#39;ensemble va reposer sur :</p><ul><li>Des sélecteurs, exemple <code>document.getElementById(&#39;tableau&#39;)</code>.</li><li>L&#39;obtention de valeur, exemple <code>document.getElementById(&#39;monInputText&#39;).value</code>.</li><li>Masquer / afficher des éléments, exemple <code>document.getElementById(&#39;monInputText&#39;).className=&#39;hidden&#39;</code>.</li></ul></div><h2 id="avec-une-librairie" tabindex="-1">Avec une Librairie <a class="header-anchor" href="#avec-une-librairie" aria-label="Permalink to &quot;Avec une Librairie&quot;">​</a></h2><p>Nous avons vu la façon manuelle de valider les formulaires. Je pense que sans vous faire un dessin… vous vous rendez compte que si nous avons 200 champs; ça va être plus compliqué ! D&#39;autant plus que plus notre formulaire sera complexe plus celui-ci aura des règles complexes.</p><p>Heureusement des gens ont déjà pensé à ce genre de problématique pour vous… Je vous propose d&#39;utiliser :</p><ul><li><a href="https://github.com/jquery-validation/jquery-validation" target="_blank" rel="noreferrer">jQuery Validation</a></li></ul><div class="warning custom-block"><p class="custom-block-title">C&#39;est un plug-in parmi tant d&#39;autres</p><p>Ce plug-in est juste « un parmi tant d&#39;autre », comme toujours utilisez celui le plus adapté à votre problématique.</p><p>Par exemple quand nous ferons du VueJS, <strong>il ne faudra plus utiliser jQuery</strong> !</p></div><h3 id="a-faire-1" tabindex="-1">À faire <a class="header-anchor" href="#a-faire-1" aria-label="Permalink to &quot;À faire&quot;">​</a></h3><p>Réécrire votre code précédent pour implémenter une validation via jQuery Validation.</p>`,29),r=[t];function p(o,u,h,d,c,k){return a(),i("div",null,r)}const v=s(l,[["render",p]]);export{E as __pageData,v as default};
