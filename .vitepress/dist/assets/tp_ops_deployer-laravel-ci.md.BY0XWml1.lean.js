import{_ as s,c as e,o as a,U as i}from"./chunks/framework.aGaNZw_P.js";const n="/assets/gitlab-docker-ci.ChbQhWoz.jpg",l="/assets/project_create.CYg3sjbV.png",t="/assets/ci-step.Cwi5Ms22.png",r="/assets/ci-step-failure.CS9G6fvF.png",p="/assets/registry.BekHGpu1.png",o="/assets/token.DhyotGpm.png",c="/assets/docker_run.DLbsjmrL.png",F=JSON.parse(`{"title":"Intégration continue avec Laravel","description":"Dans ce TP nous allons voir comment mettre en place de l'intégration continue avec Laravel. Dans un précédent TP nous avons vu en détail comment « lancer / héberger » votre site avec Docker + Compose, nous avons ici la suite à savoir comment packager votre code dans un conteneur réutilisable sans envoyer votre code source sur le serveur.","frontmatter":{"description":"Dans ce TP nous allons voir comment mettre en place de l'intégration continue avec Laravel. Dans un précédent TP nous avons vu en détail comment « lancer / héberger » votre site avec Docker + Compose, nous avons ici la suite à savoir comment packager votre code dans un conteneur réutilisable sans envoyer votre code source sur le serveur."},"headers":[],"relativePath":"tp/ops/deployer-laravel-ci.md","filePath":"tp/ops/deployer-laravel-ci.md","lastUpdated":1642960109000}`),u={name:"tp/ops/deployer-laravel-ci.md"},d=i("",68),h=[d];function k(m,b,v,g,E,y){return a(),e("div",null,h)}const C=s(u,[["render",k]]);export{F as __pageData,C as default};
